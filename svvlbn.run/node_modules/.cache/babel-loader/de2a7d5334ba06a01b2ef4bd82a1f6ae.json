{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\n\nvar _dec, _class;\n\nimport { injectable } from 'inversify';\nvar copy = \"varying vec2 v_UV;\\n\\nuniform sampler2D u_Texture;\\n\\nvoid main() {\\n  gl_FragColor = vec4(texture2D(u_Texture, v_UV));\\n}\";\nvar quad = \"attribute vec2 a_Position;\\n\\nvarying vec2 v_UV;\\n\\nvoid main() {\\n  v_UV = 0.5 * (a_Position + 1.0);\\n  gl_Position = vec4(a_Position, 0., 1.);\\n}\";\nimport BasePostProcessingPass from '../BasePostProcessingPass';\nvar CopyPass = (_dec = injectable(), _dec(_class = function (_BasePostProcessingPa) {\n  _inherits(CopyPass, _BasePostProcessingPa);\n\n  function CopyPass() {\n    _classCallCheck(this, CopyPass);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CopyPass).apply(this, arguments));\n  }\n\n  _createClass(CopyPass, [{\n    key: \"setupShaders\",\n    value: function setupShaders() {\n      this.shaderModuleService.registerModule('copy-pass', {\n        vs: quad,\n        fs: copy\n      });\n      return this.shaderModuleService.getModule('copy-pass');\n    }\n  }]);\n\n  return CopyPass;\n}(BasePostProcessingPass)) || _class);\nexport { CopyPass as default };","map":{"version":3,"sources":["../../../../../src/services/renderer/passes/post-processing/CopyPass.ts"],"names":["injectable","CopyPass","BasePostProcessingPass","vs","fs","copy"],"mappings":";;;;;;;;AAAA,SAAA,UAAA,QAAA,WAAA;;;AAGA,OAAA,sBAAA,MAAA,2BAAA;IAGqBC,Q,WADpBD,UAAU,E;;;;;;;;;;;mCAEa;AACpB,WAAA,mBAAA,CAAA,cAAA,CAAA,WAAA,EAAqD;AACnDG,QAAAA,EAAE,EADiD,IAAA;AAEnDC,QAAAA,EAAE,EAAEC;AAF+C,OAArD;AAKA,aAAO,KAAA,mBAAA,CAAA,SAAA,CAAP,WAAO,CAAP;AACD;;;;EARmCH,sB;SAAjBD,Q","sourcesContent":["import { injectable } from 'inversify';\nimport copy from '../../../../shaders/post-processing/copy.glsl';\nimport quad from '../../../../shaders/post-processing/quad.glsl';\nimport BasePostProcessingPass from '../BasePostProcessingPass';\n\n@injectable()\nexport default class CopyPass extends BasePostProcessingPass {\n  public setupShaders() {\n    this.shaderModuleService.registerModule('copy-pass', {\n      vs: quad,\n      fs: copy,\n    });\n\n    return this.shaderModuleService.getModule('copy-pass');\n  }\n}\n"]},"metadata":{},"sourceType":"module"}