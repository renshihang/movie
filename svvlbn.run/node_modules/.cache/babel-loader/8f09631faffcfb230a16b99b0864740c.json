{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport { TYPES } from '@antv/l7-core';\nimport { DOM } from '@antv/l7-utils';\nimport { EventEmitter } from 'eventemitter3';\nexport var PositionType;\n\n(function (PositionType) {\n  PositionType[\"TOPRIGHT\"] = \"topright\";\n  PositionType[\"TOPLEFT\"] = \"topleft\";\n  PositionType[\"BOTTOMRIGHT\"] = \"bottomright\";\n  PositionType[\"BOTTOMLEFT\"] = \"bottomleft\";\n})(PositionType || (PositionType = {}));\n\nvar Control = function (_EventEmitter) {\n  _inherits(Control, _EventEmitter);\n\n  function Control(cfg) {\n    var _this;\n\n    _classCallCheck(this, Control);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Control).call(this));\n    _this.controlOption = void 0;\n    _this.container = void 0;\n    _this.mapsService = void 0;\n    _this.renderService = void 0;\n    _this.layerService = void 0;\n    _this.controlService = void 0;\n    _this.isShow = void 0;\n    _this.controlOption = _objectSpread({}, _this.getDefault(), {}, cfg || {});\n    return _this;\n  }\n\n  _createClass(Control, [{\n    key: \"getDefault\",\n    value: function getDefault() {\n      return {\n        position: PositionType.TOPRIGHT\n      };\n    }\n  }, {\n    key: \"setPosition\",\n    value: function setPosition(position) {\n      return this;\n    }\n  }, {\n    key: \"addTo\",\n    value: function addTo(sceneContainer) {\n      this.mapsService = sceneContainer.get(TYPES.IMapService);\n      this.renderService = sceneContainer.get(TYPES.IRendererService);\n      this.layerService = sceneContainer.get(TYPES.ILayerService);\n      this.controlService = sceneContainer.get(TYPES.IControlService);\n      this.isShow = true;\n      this.container = this.onAdd();\n      var container = this.container;\n      var pos = this.controlOption.position;\n      var corner = this.controlService.controlCorners[pos];\n      DOM.addClass(container, 'l7-control');\n\n      if (pos.indexOf('bottom') !== -1) {\n        corner.insertBefore(container, corner.firstChild);\n      } else {\n        corner.appendChild(container);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"onAdd\",\n    value: function onAdd() {\n      throw new Error('Method not implemented.');\n    }\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      var container = this.container;\n      DOM.addClass(container, 'l7-control-hide');\n      this.isShow = false;\n    }\n  }, {\n    key: \"show\",\n    value: function show() {\n      var container = this.container;\n      DOM.removeClass(container, 'l7-control-hide');\n      this.isShow = true;\n    }\n  }, {\n    key: \"remove\",\n    value: function remove() {\n      if (!this.mapsService) {\n        return this;\n      }\n\n      DOM.remove(this.container);\n    }\n  }, {\n    key: \"_refocusOnMap\",\n    value: function _refocusOnMap(e) {\n      if (this.mapsService && e && e.screenX > 0 && e.screenY > 0) {\n        var container = this.mapsService.getContainer();\n\n        if (container !== null) {\n          container.focus();\n        }\n      }\n    }\n  }]);\n\n  return Control;\n}(EventEmitter);\n\nexport { Control as default };","map":{"version":3,"sources":["../../src/control/BaseControl.ts"],"names":["PositionType","Control","EventEmitter","controlOption","container","mapsService","renderService","layerService","controlService","isShow","cfg","position","TOPRIGHT","sceneContainer","TYPES","pos","corner","DOM","e"],"mappings":"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","sourcesContent":["import {\n  IControlService,\n  ILayerService,\n  IMapService,\n  IRendererService,\n  TYPES,\n} from '@antv/l7-core';\nimport { DOM } from '@antv/l7-utils';\nimport { EventEmitter } from 'eventemitter3';\nimport { Container } from 'inversify';\n\nexport enum PositionType {\n  'TOPRIGHT' = 'topright',\n  'TOPLEFT' = 'topleft',\n  'BOTTOMRIGHT' = 'bottomright',\n  'BOTTOMLEFT' = 'bottomleft',\n}\nexport type PositionName =\n  | 'topright'\n  | 'topleft'\n  | 'bottomright'\n  | 'bottomleft';\nexport interface IControlOption {\n  position: PositionName;\n  [key: string]: any;\n}\nexport default class Control extends EventEmitter {\n  public controlOption: IControlOption;\n  protected container: HTMLElement;\n  protected mapsService: IMapService;\n  protected renderService: IRendererService;\n  protected layerService: ILayerService;\n  protected controlService: IControlService;\n\n  private isShow: boolean;\n\n  constructor(cfg?: Partial<IControlOption>) {\n    super();\n    this.controlOption = {\n      ...this.getDefault(),\n      ...(cfg || {}),\n    };\n  }\n\n  public getDefault() {\n    return {\n      position: PositionType.TOPRIGHT,\n    };\n  }\n  public setPosition(position: PositionName) {\n    // 考虑组件的自动布局，需要销毁重建\n    // const controlService = this.controlService;\n    // if (controlService) {\n    //   controlService.removeControl(this);\n    // }\n    // this.controlOption.position = position;\n    // if (controlService) {\n    //   controlService.addControl(this, this.mapsService);\n    // }\n    return this;\n  }\n  public addTo(sceneContainer: Container) {\n    this.mapsService = sceneContainer.get<IMapService>(TYPES.IMapService);\n    this.renderService = sceneContainer.get<IRendererService>(\n      TYPES.IRendererService,\n    );\n    this.layerService = sceneContainer.get<ILayerService>(TYPES.ILayerService);\n    this.controlService = sceneContainer.get<IControlService>(\n      TYPES.IControlService,\n    );\n\n    this.isShow = true;\n    this.container = this.onAdd();\n    const container = this.container;\n    const pos = this.controlOption.position;\n    const corner = this.controlService.controlCorners[pos];\n    DOM.addClass(container, 'l7-control');\n\n    if (pos.indexOf('bottom') !== -1) {\n      corner.insertBefore(container, corner.firstChild);\n    } else {\n      corner.appendChild(container);\n    }\n    return this;\n  }\n  public onAdd(): HTMLElement {\n    throw new Error('Method not implemented.');\n  }\n  public hide() {\n    const container = this.container;\n    DOM.addClass(container, 'l7-control-hide');\n    this.isShow = false;\n  }\n  public show() {\n    const container = this.container;\n    DOM.removeClass(container, 'l7-control-hide');\n    this.isShow = true;\n  }\n  public remove() {\n    if (!this.mapsService) {\n      return this;\n    }\n    DOM.remove(this.container);\n  }\n  public _refocusOnMap(e: MouseEvent) {\n    // if map exists and event is not a keyboard event\n    if (this.mapsService && e && e.screenX > 0 && e.screenY > 0) {\n      const container = this.mapsService.getContainer();\n      if (container !== null) {\n        container.focus();\n      }\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}