{"ast":null,"code":"import _initializerDefineProperty from \"@babel/runtime/helpers/initializerDefineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _applyDecoratedDescriptor from \"@babel/runtime/helpers/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"@babel/runtime/helpers/initializerWarningHelper\";\n\nvar _dec, _dec2, _dec3, _class, _class2, _descriptor, _descriptor2, _temp;\n\nimport EventEmitter from 'eventemitter3';\nimport Hammer from 'hammerjs';\nimport { inject, injectable } from 'inversify';\nimport { TYPES } from '../../types';\nimport { InteractionEvent } from './IInteractionService';\nvar InteractionService = (_dec = injectable(), _dec2 = inject(TYPES.IMapService), _dec3 = inject(TYPES.ILogService), _dec(_class = (_class2 = (_temp = function (_EventEmitter) {\n  _inherits(InteractionService, _EventEmitter);\n\n  function InteractionService() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, InteractionService);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(InteractionService)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _initializerDefineProperty(_this, \"mapService\", _descriptor, _assertThisInitialized(_this));\n\n    _initializerDefineProperty(_this, \"logger\", _descriptor2, _assertThisInitialized(_this));\n\n    _this.hammertime = void 0;\n\n    _this.onHover = function (_ref) {\n      var x = _ref.x,\n          y = _ref.y,\n          type = _ref.type;\n\n      var $containter = _this.mapService.getMapContainer();\n\n      if ($containter) {\n        var _$containter$getBound = $containter.getBoundingClientRect(),\n            top = _$containter$getBound.top,\n            left = _$containter$getBound.left;\n\n        x -= left;\n        y -= top;\n      }\n\n      var lngLat = _this.mapService.containerToLngLat([x, y]);\n\n      _this.emit(InteractionEvent.Hover, {\n        x: x,\n        y: y,\n        lngLat: lngLat,\n        type: type\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(InteractionService, [{\n    key: \"init\",\n    value: function init() {\n      this.addEventListenerOnMap();\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      if (this.hammertime) {\n        this.hammertime.destroy();\n      }\n\n      this.removeEventListenerOnMap();\n      this.off(InteractionEvent.Hover);\n    }\n  }, {\n    key: \"triggerHover\",\n    value: function triggerHover(_ref2) {\n      var x = _ref2.x,\n          y = _ref2.y;\n      this.emit(InteractionEvent.Hover, {\n        x: x,\n        y: y\n      });\n    }\n  }, {\n    key: \"triggerSelect\",\n    value: function triggerSelect(id) {\n      this.emit(InteractionEvent.Select, {\n        featureId: id\n      });\n    }\n  }, {\n    key: \"triggerActive\",\n    value: function triggerActive(id) {\n      this.emit(InteractionEvent.Active, {\n        featureId: id\n      });\n    }\n  }, {\n    key: \"addEventListenerOnMap\",\n    value: function addEventListenerOnMap() {\n      var $containter = this.mapService.getMapContainer();\n\n      if ($containter) {\n        var hammertime = new Hammer($containter);\n        hammertime.get('pan').set({\n          direction: Hammer.DIRECTION_ALL\n        });\n        hammertime.get('pinch').set({\n          enable: true\n        });\n        $containter.addEventListener('mousemove', this.onHover);\n        $containter.addEventListener('click', this.onHover);\n        $containter.addEventListener('mousedown', this.onHover);\n        $containter.addEventListener('mouseup', this.onHover);\n        $containter.addEventListener('dblclick', this.onHover);\n        $containter.addEventListener('contextmenu', this.onHover);\n        this.hammertime = hammertime;\n        this.logger.debug('add event listeners on canvas');\n      }\n    }\n  }, {\n    key: \"removeEventListenerOnMap\",\n    value: function removeEventListenerOnMap() {\n      var $containter = this.mapService.getMapContainer();\n\n      if ($containter) {\n        $containter.removeEventListener('mousemove', this.onHover);\n        $containter.removeEventListener('click', this.onHover);\n        $containter.removeEventListener('mousedown', this.onHover);\n        $containter.removeEventListener('mouseup', this.onHover);\n        $containter.removeEventListener('dblclick', this.onHover);\n        $containter.removeEventListener('contextmenu', this.onHover);\n      }\n    }\n  }]);\n\n  return InteractionService;\n}(EventEmitter), _temp), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, \"mapService\", [_dec2], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, \"logger\", [_dec3], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class2)) || _class);\nexport { InteractionService as default };","map":{"version":3,"sources":["../../../src/services/interaction/InteractionService.ts"],"names":["injectable","InteractionService","EventEmitter","inject","TYPES","hammertime","InteractionEvent","x","y","id","featureId","$containter","direction","Hammer","DIRECTION_ALL","enable","onHover","type","top","left","lngLat"],"mappings":"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","sourcesContent":["import EventEmitter from 'eventemitter3';\nimport Hammer from 'hammerjs';\nimport { inject, injectable } from 'inversify';\nimport { TYPES } from '../../types';\nimport { ILogService } from '../log/ILogService';\nimport { IMapService } from '../map/IMapService';\nimport { IInteractionService, InteractionEvent } from './IInteractionService';\n/**\n * 由于目前 L7 与地图结合的方案为双 canvas 而非共享 WebGL Context，事件监听注册在地图底图上。\n * 除此之外，后续如果支持非地图场景，事件监听就需要注册在 L7 canvas 上。\n */\n@injectable()\nexport default class InteractionService extends EventEmitter\n  implements IInteractionService {\n  @inject(TYPES.IMapService)\n  private readonly mapService: IMapService;\n\n  @inject(TYPES.ILogService)\n  private readonly logger: ILogService;\n\n  private hammertime: HammerManager;\n\n  public init() {\n    // 注册事件在地图底图上\n    this.addEventListenerOnMap();\n  }\n\n  public destroy() {\n    if (this.hammertime) {\n      this.hammertime.destroy();\n    }\n    this.removeEventListenerOnMap();\n    this.off(InteractionEvent.Hover);\n  }\n\n  public triggerHover({ x, y }: { x: number; y: number }) {\n    this.emit(InteractionEvent.Hover, { x, y });\n  }\n  public triggerSelect(id: number): void {\n    this.emit(InteractionEvent.Select, { featureId: id });\n  }\n\n  public triggerActive(id: number): void {\n    this.emit(InteractionEvent.Active, { featureId: id });\n  }\n\n  private addEventListenerOnMap() {\n    const $containter = this.mapService.getMapContainer();\n    if ($containter) {\n      const hammertime = new Hammer($containter);\n      hammertime.get('pan').set({ direction: Hammer.DIRECTION_ALL });\n      hammertime.get('pinch').set({ enable: true });\n\n      // hammertime.on('panstart', this.onPanstart);\n      // hammertime.on('panmove', this.onPanmove);\n      // hammertime.on('panend', this.onPanend);\n      // hammertime.on('pinch', this.onPinch);\n      $containter.addEventListener('mousemove', this.onHover);\n      $containter.addEventListener('click', this.onHover);\n      $containter.addEventListener('mousedown', this.onHover);\n      $containter.addEventListener('mouseup', this.onHover);\n      $containter.addEventListener('dblclick', this.onHover);\n      $containter.addEventListener('contextmenu', this.onHover);\n\n      this.hammertime = hammertime;\n\n      // TODO: 根据场景注册事件到 L7 canvas 上\n      this.logger.debug('add event listeners on canvas');\n    }\n  }\n  private removeEventListenerOnMap() {\n    const $containter = this.mapService.getMapContainer();\n    if ($containter) {\n      $containter.removeEventListener('mousemove', this.onHover);\n      $containter.removeEventListener('click', this.onHover);\n      $containter.removeEventListener('mousedown', this.onHover);\n      $containter.removeEventListener('mouseup', this.onHover);\n      $containter.removeEventListener('dblclick', this.onHover);\n      $containter.removeEventListener('contextmenu', this.onHover);\n    }\n  }\n\n  private onHover = ({ x, y, type }: MouseEvent) => {\n    const $containter = this.mapService.getMapContainer();\n    if ($containter) {\n      const { top, left } = $containter.getBoundingClientRect();\n      x -= left;\n      y -= top;\n    }\n    const lngLat = this.mapService.containerToLngLat([x, y]);\n    this.emit(InteractionEvent.Hover, { x, y, lngLat, type });\n  };\n}\n"]},"metadata":{},"sourceType":"module"}