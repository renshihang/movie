{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\nvar _dec, _class;\n\nimport { injectable } from 'inversify';\nvar LayerStylePlugin = (_dec = injectable(), _dec(_class = function () {\n  function LayerStylePlugin() {\n    _classCallCheck(this, LayerStylePlugin);\n  }\n\n  _createClass(LayerStylePlugin, [{\n    key: \"apply\",\n    value: function apply(layer) {\n      layer.hooks.afterInit.tap('LayerStylePlugin', function () {\n        layer.updateLayerConfig({});\n\n        var _layer$getLayerConfig = layer.getLayerConfig(),\n            autoFit = _layer$getLayerConfig.autoFit;\n\n        if (autoFit) {\n          layer.fitBounds();\n        }\n      });\n    }\n  }]);\n\n  return LayerStylePlugin;\n}()) || _class);\nexport { LayerStylePlugin as default };","map":{"version":3,"sources":["../../src/plugins/LayerStylePlugin.ts"],"names":["injectable","LayerStylePlugin","layer","autoFit"],"mappings":";;;;;AAGA,SAAA,UAAA,QAAA,WAAA;IAKqBC,gB,WADpBD,UAAU,E;;;;;;;0BAEIE,K,EAAe;AAC1BA,MAAAA,KAAK,CAALA,KAAAA,CAAAA,SAAAA,CAAAA,GAAAA,CAAAA,kBAAAA,EAA8C,YAAM;AAElDA,QAAAA,KAAK,CAALA,iBAAAA,CAAAA,EAAAA;;AAFkD,YAAA,qBAAA,GAG9BA,KAAK,CAHyB,cAG9BA,EAH8B;AAAA,YAG1CC,OAH0C,GAAA,qBAAA,CAAA,OAAA;;AAIlD,YAAA,OAAA,EAAa;AACXD,UAAAA,KAAK,CAALA,SAAAA;AACD;AANHA,OAAAA;AAQD;;;;;SAVkBD,gB","sourcesContent":["import { ILayer, ILayerPlugin, IMapService, TYPES } from '@antv/l7-core';\nimport Source from '@antv/l7-source';\nimport { encodePickingColor, rgb2arr } from '@antv/l7-utils';\nimport { injectable } from 'inversify';\n/**\n * 更新图层样式，初始图层相关配置\n */\n@injectable()\nexport default class LayerStylePlugin implements ILayerPlugin {\n  public apply(layer: ILayer) {\n    layer.hooks.afterInit.tap('LayerStylePlugin', () => {\n      // 更新图层默认状态\n      layer.updateLayerConfig({});\n      const { autoFit } = layer.getLayerConfig();\n      if (autoFit) {\n        layer.fitBounds();\n      }\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}