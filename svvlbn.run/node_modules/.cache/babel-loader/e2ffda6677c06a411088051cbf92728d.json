{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport BaseModel from '../../core/BaseModel';\nimport { polygonTriangulation } from '../../core/triangulation';\nvar polygon_frag = \"uniform float u_opacity: 1.0;\\nvarying vec4 v_Color;\\n\\n#pragma include \\\"picking\\\"\\n\\nvoid main() {\\n  gl_FragColor = v_Color;\\n  gl_FragColor.a *= u_opacity;\\n  gl_FragColor = filterColor(gl_FragColor);\\n}\\n\";\nvar polygon_vert = \"attribute vec4 a_Color;\\nattribute vec3 a_Position;\\nattribute vec3 a_Normal;\\nattribute float a_Size;\\nuniform mat4 u_ModelMatrix;\\n\\nvarying vec4 v_Color;\\n\\n#pragma include \\\"projection\\\"\\n#pragma include \\\"picking\\\"\\n\\nvoid main() {\\n  v_Color = a_Color;\\n  vec4 project_pos = project_position(vec4(a_Position, 1.0));\\n  gl_Position = project_common_position_to_clipspace(vec4(project_pos.xyz, 1.0));\\n\\n  setPickingColor(a_PickingColor);\\n}\\n\\n\";\n\nvar FillModel = function (_BaseModel) {\n  _inherits(FillModel, _BaseModel);\n\n  function FillModel() {\n    _classCallCheck(this, FillModel);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(FillModel).apply(this, arguments));\n  }\n\n  _createClass(FillModel, [{\n    key: \"getUninforms\",\n    value: function getUninforms() {\n      var _ref = this.layer.getLayerConfig(),\n          _ref$opacity = _ref.opacity,\n          opacity = _ref$opacity === void 0 ? 1 : _ref$opacity;\n\n      return {\n        u_opacity: opacity\n      };\n    }\n  }, {\n    key: \"buildModels\",\n    value: function buildModels() {\n      return [this.layer.buildLayerModel({\n        moduleName: 'polygon',\n        vertexShader: polygon_vert,\n        fragmentShader: polygon_frag,\n        triangulation: polygonTriangulation,\n        depth: {\n          enable: false\n        }\n      })];\n    }\n  }, {\n    key: \"registerBuiltinAttributes\",\n    value: function registerBuiltinAttributes() {}\n  }]);\n\n  return FillModel;\n}(BaseModel);\n\nexport { FillModel as default };","map":{"version":3,"sources":["../../../src/polygon/models/fill.ts"],"names":["FillModel","BaseModel","opacity","u_opacity","moduleName","vertexShader","fragmentShader","triangulation","depth","enable"],"mappings":";;;;;AAaA,OAAA,SAAA,MAAA,sBAAA;AACA,SAAA,oBAAA,QAAA,0BAAA;;;;IAOqBA,S;;;;;;;;;;;mCACG;AAAA,UAAA,IAAA,GAGhB,KAAA,KAAA,CAHgB,cAGhB,EAHgB;AAAA,UAAA,YAAA,GAAA,IAAA,CAAA,OAAA;AAAA,UAElBE,OAFkB,GAAA,YAAA,KAAA,KAAA,CAAA,GAAA,CAAA,GAAA,YAAA;;AAIpB,aAAO;AACLC,QAAAA,SAAS,EAAED;AADN,OAAP;AAGD;;;kCAE8B;AAC7B,aAAO,CACL,KAAA,KAAA,CAAA,eAAA,CAA2B;AACzBE,QAAAA,UAAU,EADe,SAAA;AAEzBC,QAAAA,YAAY,EAFa,YAAA;AAGzBC,QAAAA,cAAc,EAHW,YAAA;AAIzBC,QAAAA,aAAa,EAJY,oBAAA;AAKzBC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE;AAAV;AALkB,OAA3B,CADK,CAAP;AASD;;;gDAEqC,CAErC;;;;EAxBoCR,S;;SAAlBD,S","sourcesContent":["import {\n  AttributeType,\n  gl,\n  IEncodeFeature,\n  ILayer,\n  ILayerModel,\n  ILayerPlugin,\n  ILogService,\n  IModel,\n  IStyleAttributeService,\n  lazyInject,\n  TYPES,\n} from '@antv/l7-core';\nimport BaseModel from '../../core/BaseModel';\nimport { polygonTriangulation } from '../../core/triangulation';\nimport polygon_frag from '../shaders/polygon_frag.glsl';\nimport polygon_vert from '../shaders/polygon_vert.glsl';\n\ninterface IPolygonLayerStyleOptions {\n  opacity: number;\n}\nexport default class FillModel extends BaseModel {\n  public getUninforms() {\n    const {\n      opacity = 1,\n    } = this.layer.getLayerConfig() as IPolygonLayerStyleOptions;\n    return {\n      u_opacity: opacity,\n    };\n  }\n\n  public buildModels(): IModel[] {\n    return [\n      this.layer.buildLayerModel({\n        moduleName: 'polygon',\n        vertexShader: polygon_vert,\n        fragmentShader: polygon_frag,\n        triangulation: polygonTriangulation,\n        depth: { enable: false },\n      }),\n    ];\n  }\n\n  protected registerBuiltinAttributes() {\n    // point layer size;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}