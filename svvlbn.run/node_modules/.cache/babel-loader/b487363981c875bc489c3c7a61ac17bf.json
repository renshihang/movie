{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport { TYPES } from '@antv/l7-core';\nimport { bindAll, DOM } from '@antv/l7-utils';\nimport { EventEmitter } from 'eventemitter3';\nimport { anchorTranslate, anchorType, applyAnchorClass } from './utils/anchor';\n\nvar Popup = function (_EventEmitter) {\n  _inherits(Popup, _EventEmitter);\n\n  function Popup(cfg) {\n    var _this;\n\n    _classCallCheck(this, Popup);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Popup).call(this));\n    _this.popupOption = void 0;\n    _this.mapsService = void 0;\n    _this.lngLat = void 0;\n    _this.content = void 0;\n    _this.closeButton = void 0;\n    _this.timeoutInstance = void 0;\n    _this.container = void 0;\n    _this.tip = void 0;\n    _this.scene = void 0;\n    _this.popupOption = _objectSpread({}, _this.getdefault(), {}, cfg);\n    bindAll(['update', 'onClickClose', 'remove'], _assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Popup, [{\n    key: \"addTo\",\n    value: function addTo(scene) {\n      var _this2 = this;\n\n      this.mapsService = scene.get(TYPES.IMapService);\n      this.mapsService.on('camerachange', this.update);\n      this.scene = scene;\n      this.update();\n\n      if (this.popupOption.closeOnClick) {\n        this.timeoutInstance = setTimeout(function () {\n          _this2.mapsService.on('click', _this2.onClickClose);\n        }, 30);\n      }\n\n      this.emit('open');\n      return this;\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      this.remove();\n    }\n  }, {\n    key: \"open\",\n    value: function open() {\n      this.addTo(this.scene);\n    }\n  }, {\n    key: \"setHTML\",\n    value: function setHTML(html) {\n      var frag = window.document.createDocumentFragment();\n      var temp = window.document.createElement('body');\n      var child;\n      temp.innerHTML = html;\n\n      while (true) {\n        child = temp.firstChild;\n\n        if (!child) {\n          break;\n        }\n\n        frag.appendChild(child);\n      }\n\n      return this.setDOMContent(frag);\n    }\n  }, {\n    key: \"setLnglat\",\n    value: function setLnglat(lngLat) {\n      this.lngLat = lngLat;\n\n      if (Array.isArray(lngLat)) {\n        this.lngLat = {\n          lng: lngLat[0],\n          lat: lngLat[1]\n        };\n      }\n\n      if (this.mapsService) {\n        this.mapsService.on('camerachange', this.update);\n      }\n\n      this.update();\n      return this;\n    }\n  }, {\n    key: \"getLnglat\",\n    value: function getLnglat() {\n      return this.lngLat;\n    }\n  }, {\n    key: \"setText\",\n    value: function setText(text) {\n      return this.setDOMContent(window.document.createTextNode(text));\n    }\n  }, {\n    key: \"setMaxWidth\",\n    value: function setMaxWidth(maxWidth) {\n      this.popupOption.maxWidth = maxWidth;\n      this.update();\n      return this;\n    }\n  }, {\n    key: \"setDOMContent\",\n    value: function setDOMContent(htmlNode) {\n      this.createContent();\n      this.content.appendChild(htmlNode);\n      this.update();\n      return this;\n    }\n  }, {\n    key: \"remove\",\n    value: function remove() {\n      if (this.content) {\n        this.removeDom(this.content);\n      }\n\n      if (this.container) {\n        this.removeDom(this.container);\n        delete this.container;\n      }\n\n      if (this.mapsService) {\n        this.mapsService.off('camerachange', this.update);\n        this.mapsService.off('click', this.onClickClose);\n        delete this.mapsService;\n      }\n\n      clearTimeout(this.timeoutInstance);\n      this.emit('close');\n      return this;\n    }\n  }, {\n    key: \"isOpen\",\n    value: function isOpen() {\n      return !!this.mapsService;\n    }\n  }, {\n    key: \"createContent\",\n    value: function createContent() {\n      if (this.content) {\n        DOM.remove(this.content);\n      }\n\n      this.content = DOM.create('div', 'l7-popup-content', this.container);\n\n      if (this.popupOption.closeButton) {\n        this.closeButton = DOM.create('button', 'l7-popup-close-button', this.content);\n        this.closeButton.setAttribute('aria-label', 'Close popup');\n        this.closeButton.innerHTML = '&#215;';\n        this.closeButton.addEventListener('click', this.onClickClose);\n      }\n    }\n  }, {\n    key: \"creatDom\",\n    value: function creatDom(tagName, className, container) {\n      var el = window.document.createElement(tagName);\n\n      if (className !== undefined) {\n        el.className = className;\n      }\n\n      if (container) {\n        container.appendChild(el);\n      }\n\n      return el;\n    }\n  }, {\n    key: \"removeDom\",\n    value: function removeDom(node) {\n      if (node.parentNode) {\n        node.parentNode.removeChild(node);\n      }\n    }\n  }, {\n    key: \"getdefault\",\n    value: function getdefault() {\n      return {\n        closeButton: true,\n        closeOnClick: true,\n        maxWidth: '240px',\n        offsets: [0, 0],\n        anchor: anchorType.BOTTOM,\n        className: ''\n      };\n    }\n  }, {\n    key: \"onClickClose\",\n    value: function onClickClose(e) {\n      if (e.stopPropagation) {\n        e.stopPropagation();\n      }\n\n      this.remove();\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var _this3 = this;\n\n      var hasPosition = this.lngLat;\n      var _this$popupOption = this.popupOption,\n          className = _this$popupOption.className,\n          maxWidth = _this$popupOption.maxWidth,\n          anchor = _this$popupOption.anchor;\n\n      if (!this.mapsService || !hasPosition || !this.content) {\n        return;\n      }\n\n      var markerContainer = this.mapsService.getMarkerContainer();\n\n      if (!this.container && markerContainer) {\n        this.container = this.creatDom('div', 'l7-popup', markerContainer.parentNode);\n        this.tip = this.creatDom('div', 'l7-popup-tip', this.container);\n        this.container.appendChild(this.content);\n\n        if (className) {\n          className.split(' ').forEach(function (name) {\n            return _this3.container.classList.add(name);\n          });\n        }\n\n        this.container.addEventListener('mousedown', function (e) {\n          e.stopPropagation();\n        });\n        this.container.addEventListener('click', function (e) {\n          e.stopPropagation();\n        });\n      }\n\n      if (maxWidth && this.container.style.maxWidth !== maxWidth) {\n        this.container.style.maxWidth = maxWidth;\n      }\n\n      this.updatePosition();\n      DOM.setTransform(this.container, \"\".concat(anchorTranslate[anchor]));\n      applyAnchorClass(this.container, anchor, 'popup');\n    }\n  }, {\n    key: \"updatePosition\",\n    value: function updatePosition() {\n      if (!this.mapsService) {\n        return;\n      }\n\n      var _this$lngLat = this.lngLat,\n          lng = _this$lngLat.lng,\n          lat = _this$lngLat.lat;\n      var offsets = this.popupOption.offsets;\n      var pos = this.mapsService.lngLatToContainer([lng, lat]);\n      this.container.style.left = pos.x + offsets[0] + 'px';\n      this.container.style.top = pos.y - offsets[1] + 'px';\n    }\n  }]);\n\n  return Popup;\n}(EventEmitter);\n\nexport { Popup as default };","map":{"version":3,"sources":["../src/popup.ts"],"names":["Popup","EventEmitter","popupOption","mapsService","lngLat","content","closeButton","timeoutInstance","container","tip","scene","bindAll","TYPES","setTimeout","html","frag","window","temp","child","Array","lng","lat","text","maxWidth","htmlNode","clearTimeout","DOM","tagName","className","el","node","closeOnClick","offsets","anchor","anchorType","e","hasPosition","markerContainer","anchorTranslate","applyAnchorClass","pos"],"mappings":"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","sourcesContent":["import { ILngLat, IMapService, IPoint, IPopup, TYPES } from '@antv/l7-core';\nimport { bindAll, DOM } from '@antv/l7-utils';\nimport { EventEmitter } from 'eventemitter3';\nimport { Container } from 'inversify';\nimport { anchorTranslate, anchorType, applyAnchorClass } from './utils/anchor';\n\n/** colse event */\n\nexport interface IPopupOption {\n  closeButton: boolean;\n  closeOnClick: boolean;\n  maxWidth: string;\n  anchor: anchorType;\n  className: string;\n  offsets: number[];\n}\nexport default class Popup extends EventEmitter implements IPopup {\n  private popupOption: IPopupOption;\n  private mapsService: IMapService<unknown>;\n  private lngLat: ILngLat;\n  private content: HTMLElement;\n  private closeButton: HTMLElement;\n  private timeoutInstance: any;\n  private container: HTMLElement;\n  private tip: HTMLElement;\n  private scene: Container;\n\n  constructor(cfg?: Partial<IPopupOption>) {\n    super();\n    this.popupOption = {\n      ...this.getdefault(),\n      ...cfg,\n    };\n    bindAll(['update', 'onClickClose', 'remove'], this);\n  }\n\n  public addTo(scene: Container) {\n    this.mapsService = scene.get<IMapService>(TYPES.IMapService);\n    this.mapsService.on('camerachange', this.update);\n    this.scene = scene;\n    this.update();\n    if (this.popupOption.closeOnClick) {\n      this.timeoutInstance = setTimeout(() => {\n        this.mapsService.on('click', this.onClickClose);\n      }, 30);\n    }\n    this.emit('open');\n    return this;\n  }\n\n  public close(): void {\n    this.remove();\n  }\n\n  public open(): void {\n    this.addTo(this.scene);\n  }\n\n  public setHTML(html: string) {\n    const frag = window.document.createDocumentFragment();\n    const temp = window.document.createElement('body');\n    let child: ChildNode | null;\n    temp.innerHTML = html;\n    while (true) {\n      child = temp.firstChild;\n      if (!child) {\n        break;\n      }\n      frag.appendChild(child);\n    }\n\n    return this.setDOMContent(frag);\n  }\n\n  public setLnglat(lngLat: ILngLat): this {\n    this.lngLat = lngLat as ILngLat;\n    if (Array.isArray(lngLat)) {\n      this.lngLat = {\n        lng: lngLat[0],\n        lat: lngLat[1],\n      };\n    }\n    if (this.mapsService) {\n      this.mapsService.on('camerachange', this.update);\n    }\n    this.update();\n    return this;\n  }\n  public getLnglat(): ILngLat {\n    return this.lngLat;\n  }\n  public setText(text: string) {\n    return this.setDOMContent(window.document.createTextNode(text));\n  }\n\n  public setMaxWidth(maxWidth: string): this {\n    this.popupOption.maxWidth = maxWidth;\n    this.update();\n    return this;\n  }\n\n  public setDOMContent(htmlNode: ChildNode | DocumentFragment) {\n    this.createContent();\n    this.content.appendChild(htmlNode);\n    this.update();\n    return this;\n  }\n\n  // 移除popup\n  public remove() {\n    if (this.content) {\n      this.removeDom(this.content);\n    }\n\n    if (this.container) {\n      this.removeDom(this.container);\n      delete this.container;\n    }\n    if (this.mapsService) {\n      // TODO: mapbox AMap 事件同步\n      this.mapsService.off('camerachange', this.update);\n      this.mapsService.off('click', this.onClickClose);\n      delete this.mapsService;\n    }\n    clearTimeout(this.timeoutInstance);\n    this.emit('close');\n    return this;\n  }\n  public isOpen() {\n    return !!this.mapsService;\n  }\n\n  private createContent() {\n    if (this.content) {\n      DOM.remove(this.content);\n    }\n    this.content = DOM.create('div', 'l7-popup-content', this.container);\n    if (this.popupOption.closeButton) {\n      this.closeButton = DOM.create(\n        'button',\n        'l7-popup-close-button',\n        this.content,\n      );\n      // this.closeButton.type = 'button';\n      this.closeButton.setAttribute('aria-label', 'Close popup');\n      this.closeButton.innerHTML = '&#215;';\n      this.closeButton.addEventListener('click', this.onClickClose);\n    }\n  }\n\n  private creatDom(tagName: string, className: string, container: HTMLElement) {\n    const el = window.document.createElement(tagName);\n    if (className !== undefined) {\n      el.className = className;\n    }\n    if (container) {\n      container.appendChild(el);\n    }\n    return el;\n  }\n\n  private removeDom(node: ChildNode) {\n    if (node.parentNode) {\n      node.parentNode.removeChild(node);\n    }\n  }\n\n  private getdefault() {\n    return {\n      closeButton: true,\n      closeOnClick: true,\n      maxWidth: '240px',\n      offsets: [0, 0],\n      anchor: anchorType.BOTTOM,\n      className: '',\n    };\n  }\n\n  private onClickClose(e: Event) {\n    if (e.stopPropagation) {\n      e.stopPropagation();\n    }\n    this.remove();\n  }\n\n  private update() {\n    const hasPosition = this.lngLat;\n    const { className, maxWidth, anchor } = this.popupOption;\n    if (!this.mapsService || !hasPosition || !this.content) {\n      return;\n    }\n    const markerContainer = this.mapsService.getMarkerContainer();\n    if (!this.container && markerContainer) {\n      this.container = this.creatDom(\n        'div',\n        'l7-popup',\n        markerContainer.parentNode as HTMLElement,\n      );\n\n      this.tip = this.creatDom('div', 'l7-popup-tip', this.container);\n      this.container.appendChild(this.content);\n      if (className) {\n        className\n          .split(' ')\n          .forEach((name) => this.container.classList.add(name));\n      }\n      this.container.addEventListener('mousedown', (e) => {\n        e.stopPropagation();\n      });\n      this.container.addEventListener('click', (e) => {\n        e.stopPropagation();\n      });\n    }\n    if (maxWidth && this.container.style.maxWidth !== maxWidth) {\n      this.container.style.maxWidth = maxWidth;\n    }\n\n    this.updatePosition();\n    DOM.setTransform(this.container, `${anchorTranslate[anchor]}`);\n    applyAnchorClass(this.container, anchor, 'popup');\n  }\n\n  private updatePosition() {\n    if (!this.mapsService) {\n      return;\n    }\n    const { lng, lat } = this.lngLat;\n    const { offsets } = this.popupOption;\n    const pos = this.mapsService.lngLatToContainer([lng, lat]);\n    this.container.style.left = pos.x + offsets[0] + 'px';\n    this.container.style.top = pos.y - offsets[1] + 'px';\n  }\n}\n"]},"metadata":{},"sourceType":"module"}