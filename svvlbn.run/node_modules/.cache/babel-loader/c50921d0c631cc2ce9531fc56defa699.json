{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar error_msgs_1 = require(\"../constants/error_msgs\");\n\nvar literal_types_1 = require(\"../constants/literal_types\");\n\nvar METADATA_KEY = require(\"../constants/metadata_keys\");\n\nfunction _injectProperties(instance, childRequests, resolveRequest) {\n  var propertyInjectionsRequests = childRequests.filter(function (childRequest) {\n    return childRequest.target !== null && childRequest.target.type === literal_types_1.TargetTypeEnum.ClassProperty;\n  });\n  var propertyInjections = propertyInjectionsRequests.map(resolveRequest);\n  propertyInjectionsRequests.forEach(function (r, index) {\n    var propertyName = \"\";\n    propertyName = r.target.name.value();\n    var injection = propertyInjections[index];\n    instance[propertyName] = injection;\n  });\n  return instance;\n}\n\nfunction _createInstance(Func, injections) {\n  return new (Func.bind.apply(Func, [void 0].concat(injections)))();\n}\n\nfunction _postConstruct(constr, result) {\n  if (Reflect.hasMetadata(METADATA_KEY.POST_CONSTRUCT, constr)) {\n    var data = Reflect.getMetadata(METADATA_KEY.POST_CONSTRUCT, constr);\n\n    try {\n      result[data.value]();\n    } catch (e) {\n      throw new Error(error_msgs_1.POST_CONSTRUCT_ERROR(constr.name, e.message));\n    }\n  }\n}\n\nfunction resolveInstance(constr, childRequests, resolveRequest) {\n  var result = null;\n\n  if (childRequests.length > 0) {\n    var constructorInjectionsRequests = childRequests.filter(function (childRequest) {\n      return childRequest.target !== null && childRequest.target.type === literal_types_1.TargetTypeEnum.ConstructorArgument;\n    });\n    var constructorInjections = constructorInjectionsRequests.map(resolveRequest);\n    result = _createInstance(constr, constructorInjections);\n    result = _injectProperties(result, childRequests, resolveRequest);\n  } else {\n    result = new constr();\n  }\n\n  _postConstruct(constr, result);\n\n  return result;\n}\n\nexports.resolveInstance = resolveInstance;","map":{"version":3,"sources":["/Users/renshihang/Desktop/svvlbn.run/node_modules/inversify/lib/resolution/instantiation.js"],"names":["Object","defineProperty","exports","value","error_msgs_1","require","literal_types_1","METADATA_KEY","_injectProperties","instance","childRequests","resolveRequest","propertyInjectionsRequests","filter","childRequest","target","type","TargetTypeEnum","ClassProperty","propertyInjections","map","forEach","r","index","propertyName","name","injection","_createInstance","Func","injections","bind","apply","concat","_postConstruct","constr","result","Reflect","hasMetadata","POST_CONSTRUCT","data","getMetadata","e","Error","POST_CONSTRUCT_ERROR","message","resolveInstance","length","constructorInjectionsRequests","ConstructorArgument","constructorInjections"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,YAAY,GAAGC,OAAO,CAAC,yBAAD,CAA1B;;AACA,IAAIC,eAAe,GAAGD,OAAO,CAAC,4BAAD,CAA7B;;AACA,IAAIE,YAAY,GAAGF,OAAO,CAAC,4BAAD,CAA1B;;AACA,SAASG,iBAAT,CAA2BC,QAA3B,EAAqCC,aAArC,EAAoDC,cAApD,EAAoE;AAChE,MAAIC,0BAA0B,GAAGF,aAAa,CAACG,MAAd,CAAqB,UAAUC,YAAV,EAAwB;AAC1E,WAAQA,YAAY,CAACC,MAAb,KAAwB,IAAxB,IACJD,YAAY,CAACC,MAAb,CAAoBC,IAApB,KAA6BV,eAAe,CAACW,cAAhB,CAA+BC,aADhE;AAEH,GAHgC,CAAjC;AAIA,MAAIC,kBAAkB,GAAGP,0BAA0B,CAACQ,GAA3B,CAA+BT,cAA/B,CAAzB;AACAC,EAAAA,0BAA0B,CAACS,OAA3B,CAAmC,UAAUC,CAAV,EAAaC,KAAb,EAAoB;AACnD,QAAIC,YAAY,GAAG,EAAnB;AACAA,IAAAA,YAAY,GAAGF,CAAC,CAACP,MAAF,CAASU,IAAT,CAActB,KAAd,EAAf;AACA,QAAIuB,SAAS,GAAGP,kBAAkB,CAACI,KAAD,CAAlC;AACAd,IAAAA,QAAQ,CAACe,YAAD,CAAR,GAAyBE,SAAzB;AACH,GALD;AAMA,SAAOjB,QAAP;AACH;;AACD,SAASkB,eAAT,CAAyBC,IAAzB,EAA+BC,UAA/B,EAA2C;AACvC,SAAO,KAAKD,IAAI,CAACE,IAAL,CAAUC,KAAV,CAAgBH,IAAhB,EAAsB,CAAC,KAAK,CAAN,EAASI,MAAT,CAAgBH,UAAhB,CAAtB,CAAL,GAAP;AACH;;AACD,SAASI,cAAT,CAAwBC,MAAxB,EAAgCC,MAAhC,EAAwC;AACpC,MAAIC,OAAO,CAACC,WAAR,CAAoB9B,YAAY,CAAC+B,cAAjC,EAAiDJ,MAAjD,CAAJ,EAA8D;AAC1D,QAAIK,IAAI,GAAGH,OAAO,CAACI,WAAR,CAAoBjC,YAAY,CAAC+B,cAAjC,EAAiDJ,MAAjD,CAAX;;AACA,QAAI;AACAC,MAAAA,MAAM,CAACI,IAAI,CAACpC,KAAN,CAAN;AACH,KAFD,CAGA,OAAOsC,CAAP,EAAU;AACN,YAAM,IAAIC,KAAJ,CAAUtC,YAAY,CAACuC,oBAAb,CAAkCT,MAAM,CAACT,IAAzC,EAA+CgB,CAAC,CAACG,OAAjD,CAAV,CAAN;AACH;AACJ;AACJ;;AACD,SAASC,eAAT,CAAyBX,MAAzB,EAAiCxB,aAAjC,EAAgDC,cAAhD,EAAgE;AAC5D,MAAIwB,MAAM,GAAG,IAAb;;AACA,MAAIzB,aAAa,CAACoC,MAAd,GAAuB,CAA3B,EAA8B;AAC1B,QAAIC,6BAA6B,GAAGrC,aAAa,CAACG,MAAd,CAAqB,UAAUC,YAAV,EAAwB;AAC7E,aAAQA,YAAY,CAACC,MAAb,KAAwB,IAAxB,IAAgCD,YAAY,CAACC,MAAb,CAAoBC,IAApB,KAA6BV,eAAe,CAACW,cAAhB,CAA+B+B,mBAApG;AACH,KAFmC,CAApC;AAGA,QAAIC,qBAAqB,GAAGF,6BAA6B,CAAC3B,GAA9B,CAAkCT,cAAlC,CAA5B;AACAwB,IAAAA,MAAM,GAAGR,eAAe,CAACO,MAAD,EAASe,qBAAT,CAAxB;AACAd,IAAAA,MAAM,GAAG3B,iBAAiB,CAAC2B,MAAD,EAASzB,aAAT,EAAwBC,cAAxB,CAA1B;AACH,GAPD,MAQK;AACDwB,IAAAA,MAAM,GAAG,IAAID,MAAJ,EAAT;AACH;;AACDD,EAAAA,cAAc,CAACC,MAAD,EAASC,MAAT,CAAd;;AACA,SAAOA,MAAP;AACH;;AACDjC,OAAO,CAAC2C,eAAR,GAA0BA,eAA1B","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar error_msgs_1 = require(\"../constants/error_msgs\");\nvar literal_types_1 = require(\"../constants/literal_types\");\nvar METADATA_KEY = require(\"../constants/metadata_keys\");\nfunction _injectProperties(instance, childRequests, resolveRequest) {\n    var propertyInjectionsRequests = childRequests.filter(function (childRequest) {\n        return (childRequest.target !== null &&\n            childRequest.target.type === literal_types_1.TargetTypeEnum.ClassProperty);\n    });\n    var propertyInjections = propertyInjectionsRequests.map(resolveRequest);\n    propertyInjectionsRequests.forEach(function (r, index) {\n        var propertyName = \"\";\n        propertyName = r.target.name.value();\n        var injection = propertyInjections[index];\n        instance[propertyName] = injection;\n    });\n    return instance;\n}\nfunction _createInstance(Func, injections) {\n    return new (Func.bind.apply(Func, [void 0].concat(injections)))();\n}\nfunction _postConstruct(constr, result) {\n    if (Reflect.hasMetadata(METADATA_KEY.POST_CONSTRUCT, constr)) {\n        var data = Reflect.getMetadata(METADATA_KEY.POST_CONSTRUCT, constr);\n        try {\n            result[data.value]();\n        }\n        catch (e) {\n            throw new Error(error_msgs_1.POST_CONSTRUCT_ERROR(constr.name, e.message));\n        }\n    }\n}\nfunction resolveInstance(constr, childRequests, resolveRequest) {\n    var result = null;\n    if (childRequests.length > 0) {\n        var constructorInjectionsRequests = childRequests.filter(function (childRequest) {\n            return (childRequest.target !== null && childRequest.target.type === literal_types_1.TargetTypeEnum.ConstructorArgument);\n        });\n        var constructorInjections = constructorInjectionsRequests.map(resolveRequest);\n        result = _createInstance(constr, constructorInjections);\n        result = _injectProperties(result, childRequests, resolveRequest);\n    }\n    else {\n        result = new constr();\n    }\n    _postConstruct(constr, result);\n    return result;\n}\nexports.resolveInstance = resolveInstance;\n"]},"metadata":{},"sourceType":"script"}