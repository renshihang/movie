{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport BaseLayer from '../core/BaseLayer';\nimport RasterModels from './models/index';\n\nvar RaterLayer = function (_BaseLayer) {\n  _inherits(RaterLayer, _BaseLayer);\n\n  function RaterLayer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, RaterLayer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(RaterLayer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.type = 'RasterLayer';\n    return _this;\n  }\n\n  _createClass(RaterLayer, [{\n    key: \"buildModels\",\n    value: function buildModels() {\n      var modelType = this.getModelType();\n      this.layerModel = new RasterModels[modelType](this);\n      this.models = this.layerModel.buildModels();\n    }\n  }, {\n    key: \"getConfigSchema\",\n    value: function getConfigSchema() {\n      return {\n        properties: {\n          opacity: {\n            type: 'number',\n            minimum: 0,\n            maximum: 1\n          }\n        }\n      };\n    }\n  }, {\n    key: \"getDefaultConfig\",\n    value: function getDefaultConfig() {\n      var type = this.getModelType();\n      var defaultConfig = {\n        raster: {},\n        raster3d: {}\n      };\n      return defaultConfig[type];\n    }\n  }, {\n    key: \"getModelType\",\n    value: function getModelType() {\n      return 'raster';\n    }\n  }]);\n\n  return RaterLayer;\n}(BaseLayer);\n\nexport { RaterLayer as default };","map":{"version":3,"sources":["../../src/raster/index.ts"],"names":["RaterLayer","BaseLayer","type","modelType","RasterModels","properties","opacity","minimum","maximum","defaultConfig","raster","raster3d"],"mappings":";;;;;AACA,OAAA,SAAA,MAAA,mBAAA;AACA,OAAA,YAAA,MAAA,gBAAA;;IASqBA,U;;;;;;;;;;;;;;;UACZE,I,GAAe,a;;;;;;kCACD;AACnB,UAAMC,SAAS,GAAG,KAAlB,YAAkB,EAAlB;AACA,WAAA,UAAA,GAAkB,IAAIC,YAAY,CAAhB,SAAgB,CAAhB,CAAlB,IAAkB,CAAlB;AACA,WAAA,MAAA,GAAc,KAAA,UAAA,CAAd,WAAc,EAAd;AACD;;;sCAC2B;AAC1B,aAAO;AACLC,QAAAA,UAAU,EAAE;AACVC,UAAAA,OAAO,EAAE;AACPJ,YAAAA,IAAI,EADG,QAAA;AAEPK,YAAAA,OAAO,EAFA,CAAA;AAGPC,YAAAA,OAAO,EAAE;AAHF;AADC;AADP,OAAP;AASD;;;uCAC4B;AAC3B,UAAMN,IAAI,GAAG,KAAb,YAAa,EAAb;AACA,UAAMO,aAAa,GAAG;AACpBC,QAAAA,MAAM,EADc,EAAA;AAEpBC,QAAAA,QAAQ,EAAE;AAFU,OAAtB;AAIA,aAAOF,aAAa,CAApB,IAAoB,CAApB;AACD;;;mCAEyC;AACxC,aAAA,QAAA;AACD;;;;EA7BqCR,S;;SAAnBD,U","sourcesContent":["import { IColorRamp } from '@antv/l7-utils';\nimport BaseLayer from '../core/BaseLayer';\nimport RasterModels, { RasterModelType } from './models/index';\ninterface IRasterLayerStyleOptions {\n  opacity: number;\n  domain: [number, number];\n  noDataValue: number;\n  clampLow: boolean;\n  clampHigh: boolean;\n  rampColors: IColorRamp;\n}\nexport default class RaterLayer extends BaseLayer<IRasterLayerStyleOptions> {\n  public type: string = 'RasterLayer';\n  public buildModels() {\n    const modelType = this.getModelType();\n    this.layerModel = new RasterModels[modelType](this);\n    this.models = this.layerModel.buildModels();\n  }\n  protected getConfigSchema() {\n    return {\n      properties: {\n        opacity: {\n          type: 'number',\n          minimum: 0,\n          maximum: 1,\n        },\n      },\n    };\n  }\n  protected getDefaultConfig() {\n    const type = this.getModelType();\n    const defaultConfig = {\n      raster: {},\n      raster3d: {},\n    };\n    return defaultConfig[type];\n  }\n\n  protected getModelType(): RasterModelType {\n    return 'raster';\n  }\n}\n"]},"metadata":{},"sourceType":"module"}