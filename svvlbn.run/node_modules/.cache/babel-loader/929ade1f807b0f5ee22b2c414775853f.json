{"ast":null,"code":"var docStyle = window.document.documentElement.style;\nexport function getContainer(domId) {\n  var $dom = domId;\n\n  if (typeof domId === 'string') {\n    $dom = document.getElementById(domId);\n  }\n\n  return $dom;\n}\nexport function trim(str) {\n  return str.trim ? str.trim() : str.replace(/^\\s+|\\s+$/g, '');\n}\nexport function splitWords(str) {\n  return trim(str).split(/\\s+/);\n}\n\nfunction testProp(props) {\n  if (!docStyle) {\n    return props[0];\n  }\n\n  for (var i in props) {\n    if (props[i] && props[i] in docStyle) {\n      return props[i];\n    }\n  }\n\n  return props[0];\n}\n\nexport function create(tagName, className, container) {\n  var el = document.createElement(tagName);\n  el.className = className || '';\n\n  if (container) {\n    container.appendChild(el);\n  }\n\n  return el;\n}\nexport function remove(el) {\n  var parent = el.parentNode;\n\n  if (parent) {\n    parent.removeChild(el);\n  }\n}\nexport function addClass(el, name) {\n  if (el.classList !== undefined) {\n    var classes = splitWords(name);\n\n    for (var i = 0, len = classes.length; i < len; i++) {\n      el.classList.add(classes[i]);\n    }\n  } else if (!hasClass(el, name)) {\n    var className = getClass(el);\n    setClass(el, (className ? className + ' ' : '') + name);\n  }\n}\nexport function removeClass(el, name) {\n  if (el.classList !== undefined) {\n    el.classList.remove(name);\n  } else {\n    setClass(el, trim((' ' + getClass(el) + ' ').replace(' ' + name + ' ', ' ')));\n  }\n}\nexport function hasClass(el, name) {\n  if (el.classList !== undefined) {\n    return el.classList.contains(name);\n  }\n\n  var className = getClass(el);\n  return className.length > 0 && new RegExp('(^|\\\\s)' + name + '(\\\\s|$)').test(className);\n}\nexport function setClass(el, name) {\n  if (el instanceof HTMLElement) {\n    el.className = name;\n  } else {\n    el.className.baseVal = name;\n  }\n}\nexport function getClass(el) {\n  if (el instanceof SVGElement) {\n    el = el.correspondingElement;\n  }\n\n  return el.className.baseVal === undefined ? el.className : el.className.baseVal;\n}\nexport function empty(el) {\n  while (el && el.firstChild) {\n    el.removeChild(el.firstChild);\n  }\n}\nvar transformProp = testProp(['transform', 'WebkitTransform']);\nexport function setTransform(el, value) {\n  el.style[transformProp] = value;\n}\nexport function triggerResize() {\n  if (typeof Event === 'function') {\n    window.dispatchEvent(new Event('resize'));\n  } else {\n    var evt = window.document.createEvent('UIEvents');\n    evt.initUIEvent('resize', true, false, window, 0);\n    window.dispatchEvent(evt);\n  }\n}\nexport function printCanvas(canvas) {\n  var css = ['padding: ' + (canvas.height / 2 - 8) + 'px ' + canvas.width / 2 + 'px;', 'line-height: ' + canvas.height + 'px;', 'background-image: url(' + canvas.toDataURL() + ');'];\n  console.log('%c\\n', css.join(''));\n}","map":{"version":3,"sources":["../src/dom.ts"],"names":["docStyle","window","$dom","document","str","trim","props","el","className","container","parent","classes","splitWords","i","len","hasClass","getClass","setClass","transformProp","testProp","evt","css","canvas","console"],"mappings":"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","sourcesContent":["const docStyle = window.document.documentElement.style;\ntype ELType = HTMLElement | SVGElement;\nexport function getContainer(domId: string | HTMLDivElement) {\n  let $dom = domId as HTMLDivElement;\n  if (typeof domId === 'string') {\n    $dom = document.getElementById(domId) as HTMLDivElement;\n  }\n  return $dom;\n}\n\nexport function trim(str: string) {\n  return str.trim ? str.trim() : str.replace(/^\\s+|\\s+$/g, '');\n}\n\n// @function splitWords(str: String): String[]\n// Trims and splits the string on whitespace and returns the array of parts.\nexport function splitWords(str: string) {\n  return trim(str).split(/\\s+/);\n}\n\nfunction testProp(props: string[]): string {\n  if (!docStyle) {\n    return props[0];\n  }\n  for (const i in props) {\n    if (props[i] && props[i] in docStyle) {\n      return props[i];\n    }\n  }\n\n  return props[0];\n}\nexport function create(\n  tagName: string,\n  className?: string,\n  container?: HTMLElement,\n) {\n  const el = document.createElement(tagName);\n  el.className = className || '';\n\n  if (container) {\n    container.appendChild(el);\n  }\n  return el;\n}\n// @function remove(el: HTMLElement)\n// Removes `el` from its parent element\nexport function remove(el: ELType) {\n  const parent = el.parentNode;\n  if (parent) {\n    parent.removeChild(el);\n  }\n}\n\n// @function addClass(el: HTMLElement, name: String)\n// Adds `name` to the element's class attribute.\nexport function addClass(el: ELType, name: string) {\n  if (el.classList !== undefined) {\n    const classes = splitWords(name);\n    for (let i = 0, len = classes.length; i < len; i++) {\n      el.classList.add(classes[i]);\n    }\n  } else if (!hasClass(el, name)) {\n    const className = getClass(el);\n    setClass(el, (className ? className + ' ' : '') + name);\n  }\n}\n\n// @function removeClass(el: HTMLElement, name: String)\n// Removes `name` from the element's class attribute.\nexport function removeClass(el: ELType, name: string) {\n  if (el.classList !== undefined) {\n    el.classList.remove(name);\n  } else {\n    setClass(\n      el,\n      trim((' ' + getClass(el) + ' ').replace(' ' + name + ' ', ' ')),\n    );\n  }\n}\n\n// @function hasClass(el: HTMLElement, name: String): Boolean\n// Returns `true` if the element's class attribute contains `name`.\nexport function hasClass(el: ELType, name: string) {\n  if (el.classList !== undefined) {\n    return el.classList.contains(name);\n  }\n  const className = getClass(el);\n  return (\n    className.length > 0 &&\n    new RegExp('(^|\\\\s)' + name + '(\\\\s|$)').test(className)\n  );\n}\n\n// @function setClass(el: HTMLElement, name: String)\n// Sets the element's class.\nexport function setClass(el: ELType, name: string) {\n  if (el instanceof HTMLElement) {\n    el.className = name;\n  } else {\n    // in case of SVG element\n    el.className.baseVal = name;\n  }\n}\n\n// @function getClass(el: HTMLElement): String\n// Returns the element's class.\nexport function getClass(el: ELType) {\n  // Check if the element is an SVGElementInstance and use the correspondingElement instead\n  // (Required for linked SVG elements in IE11.)\n  if (el instanceof SVGElement) {\n    el = el.correspondingElement;\n  }\n  return el.className.baseVal === undefined\n    ? el.className\n    : el.className.baseVal;\n}\n\nexport function empty(el: ELType) {\n  while (el && el.firstChild) {\n    el.removeChild(el.firstChild);\n  }\n}\n\nconst transformProp = testProp(['transform', 'WebkitTransform']);\n\nexport function setTransform(el: ELType, value: string) {\n  // @ts-ignore\n  el.style[transformProp] = value;\n}\n\nexport function triggerResize() {\n  if (typeof Event === 'function') {\n    // modern browsers\n    window.dispatchEvent(new Event('resize'));\n  } else {\n    // for IE and other old browsers\n    // causes deprecation warning on modern browsers\n    const evt = window.document.createEvent('UIEvents');\n    // @ts-ignore\n    evt.initUIEvent('resize', true, false, window, 0);\n    window.dispatchEvent(evt);\n  }\n}\n\nexport function printCanvas(canvas: HTMLCanvasElement) {\n  const css = [\n    'padding: ' + (canvas.height / 2 - 8) + 'px ' + canvas.width / 2 + 'px;',\n    'line-height: ' + canvas.height + 'px;',\n    'background-image: url(' + canvas.toDataURL() + ');',\n  ];\n  // tslint:disable-next-line:no-console\n  console.log('%c\\n', css.join(''));\n}\n"]},"metadata":{},"sourceType":"module"}