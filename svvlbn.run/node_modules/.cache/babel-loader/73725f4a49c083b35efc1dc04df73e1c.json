{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _initializerDefineProperty from \"@babel/runtime/helpers/initializerDefineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _applyDecoratedDescriptor from \"@babel/runtime/helpers/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"@babel/runtime/helpers/initializerWarningHelper\";\n\nvar _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _temp;\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport { CoordinateSystem, MapServiceEvent, TYPES } from '@antv/l7-core';\nimport { DOM } from '@antv/l7-utils';\nimport { inject, injectable } from 'inversify';\nimport { MapTheme } from './theme';\nimport Viewport from './Viewport';\nvar mapdivCount = 0;\nvar AMAP_API_KEY = '15cd8a57710d40c9b7c0e3cc120f1200';\nvar AMAP_VERSION = '1.4.15';\nvar AMAP_SCRIPT_ID = 'amap-script';\nvar amapLoaded = false;\nvar pendingResolveQueue = [];\nvar LNGLAT_OFFSET_ZOOM_THRESHOLD = 12;\nvar AMapService = (_dec = injectable(), _dec2 = inject(TYPES.IGlobalConfigService), _dec3 = inject(TYPES.ILogService), _dec4 = inject(TYPES.MapConfig), _dec5 = inject(TYPES.ICoordinateSystemService), _dec6 = inject(TYPES.IEventEmitter), _dec(_class = (_class2 = (_temp = function () {\n  function AMapService() {\n    var _this = this;\n\n    _classCallCheck(this, AMapService);\n\n    this.map = void 0;\n\n    _initializerDefineProperty(this, \"configService\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"logger\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"config\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"coordinateSystemService\", _descriptor4, this);\n\n    _initializerDefineProperty(this, \"eventEmitter\", _descriptor5, this);\n\n    this.markerContainer = void 0;\n    this.$mapContainer = void 0;\n    this.viewport = void 0;\n    this.cameraChangedCallback = void 0;\n\n    this.handleCameraChanged = function (e) {\n      var _e$camera = e.camera,\n          fov = _e$camera.fov,\n          near = _e$camera.near,\n          far = _e$camera.far,\n          height = _e$camera.height,\n          pitch = _e$camera.pitch,\n          rotation = _e$camera.rotation,\n          aspect = _e$camera.aspect,\n          position = _e$camera.position;\n\n      var _this$getCenter = _this.getCenter(),\n          lng = _this$getCenter.lng,\n          lat = _this$getCenter.lat;\n\n      if (_this.cameraChangedCallback) {\n        _this.viewport.syncWithMapCamera({\n          aspect: aspect,\n          bearing: 360 - rotation,\n          far: far,\n          fov: fov,\n          cameraHeight: height,\n          near: near,\n          pitch: pitch,\n          zoom: _this.map.getZoom() - 1,\n          center: [lng, lat],\n          offsetOrigin: [position.x, position.y]\n        });\n\n        if (_this.viewport.getZoom() > LNGLAT_OFFSET_ZOOM_THRESHOLD) {\n          _this.coordinateSystemService.setCoordinateSystem(CoordinateSystem.P20_OFFSET);\n        } else {\n          _this.coordinateSystemService.setCoordinateSystem(CoordinateSystem.P20);\n        }\n\n        _this.cameraChangedCallback(_this.viewport);\n      }\n    };\n  }\n\n  _createClass(AMapService, [{\n    key: \"addMarkerContainer\",\n    value: function addMarkerContainer() {\n      var mapContainer = this.map.getContainer();\n\n      if (mapContainer !== null) {\n        var amap = mapContainer.getElementsByClassName('amap-maps')[0];\n        this.markerContainer = DOM.create('div', 'l7-marker-container', amap);\n      }\n    }\n  }, {\n    key: \"getMarkerContainer\",\n    value: function getMarkerContainer() {\n      return this.markerContainer;\n    }\n  }, {\n    key: \"on\",\n    value: function on(type, handler) {\n      if (MapServiceEvent.indexOf(type) !== -1) {\n        this.eventEmitter.on(type, handler);\n      } else {\n        this.map.on(type, handler);\n      }\n    }\n  }, {\n    key: \"off\",\n    value: function off(type, handler) {\n      if (MapServiceEvent.indexOf(type) !== -1) {\n        this.eventEmitter.off(type, handler);\n      } else {\n        this.map.off(type, handler);\n      }\n    }\n  }, {\n    key: \"getContainer\",\n    value: function getContainer() {\n      return this.map.getContainer();\n    }\n  }, {\n    key: \"getSize\",\n    value: function getSize() {\n      var size = this.map.getSize();\n      return [size.getWidth(), size.getHeight()];\n    }\n  }, {\n    key: \"getType\",\n    value: function getType() {\n      return 'amap';\n    }\n  }, {\n    key: \"getZoom\",\n    value: function getZoom() {\n      return this.map.getZoom() - 1;\n    }\n  }, {\n    key: \"setZoom\",\n    value: function setZoom(zoom) {\n      return this.map.setZoom(zoom);\n    }\n  }, {\n    key: \"getCenter\",\n    value: function getCenter() {\n      var center = this.map.getCenter();\n      return {\n        lng: center.getLng(),\n        lat: center.getLat()\n      };\n    }\n  }, {\n    key: \"getPitch\",\n    value: function getPitch() {\n      return this.map.getPitch();\n    }\n  }, {\n    key: \"getRotation\",\n    value: function getRotation() {\n      return 360 - this.map.getRotation();\n    }\n  }, {\n    key: \"getBounds\",\n    value: function getBounds() {\n      var amapBound = this.map.getBounds().toBounds();\n      var NE = amapBound.getNorthEast();\n      var SW = amapBound.getSouthWest();\n      var center = this.getCenter();\n      var maxlng = center.lng > NE.getLng() || center.lng < SW.getLng() ? 180 - NE.getLng() : NE.getLng();\n      var minlng = center.lng < SW.getLng() ? SW.getLng() - 180 : SW.getLng();\n      return [[minlng, SW.getLat()], [maxlng, NE.getLat()]];\n    }\n  }, {\n    key: \"getMinZoom\",\n    value: function getMinZoom() {\n      var zooms = this.map.get('zooms');\n      return zooms[0] - 1;\n    }\n  }, {\n    key: \"getMaxZoom\",\n    value: function getMaxZoom() {\n      var zooms = this.map.get('zooms');\n      return zooms[1] - 1;\n    }\n  }, {\n    key: \"setRotation\",\n    value: function setRotation(rotation) {\n      return this.map.setRotation(rotation);\n    }\n  }, {\n    key: \"zoomIn\",\n    value: function zoomIn() {\n      this.map.zoomIn();\n    }\n  }, {\n    key: \"zoomOut\",\n    value: function zoomOut() {\n      this.map.zoomOut();\n    }\n  }, {\n    key: \"panTo\",\n    value: function panTo(p) {\n      this.map.panTo(p);\n    }\n  }, {\n    key: \"panBy\",\n    value: function panBy(pixel) {\n      this.map.panTo(pixel);\n    }\n  }, {\n    key: \"fitBounds\",\n    value: function fitBounds(extent) {\n      this.map.setBounds(new AMap.Bounds([extent[0][0], extent[0][1], extent[1][0], extent[1][1]]));\n    }\n  }, {\n    key: \"setZoomAndCenter\",\n    value: function setZoomAndCenter(zoom, center) {\n      this.map.setZoomAndCenter(zoom, center);\n    }\n  }, {\n    key: \"setMapStyle\",\n    value: function setMapStyle(style) {\n      this.map.setMapStyle(this.getMapStyle(style));\n    }\n  }, {\n    key: \"pixelToLngLat\",\n    value: function pixelToLngLat(pixel) {\n      var lngLat = this.map.pixelToLngLat(new AMap.Pixel(pixel[0], pixel[1]));\n      return {\n        lng: lngLat.getLng(),\n        lat: lngLat.getLat()\n      };\n    }\n  }, {\n    key: \"lngLatToPixel\",\n    value: function lngLatToPixel(lnglat) {\n      var p = this.map.lnglatToPixel(new AMap.LngLat(lnglat[0], lnglat[1]));\n      return {\n        x: p.getX(),\n        y: p.getY()\n      };\n    }\n  }, {\n    key: \"containerToLngLat\",\n    value: function containerToLngLat(pixel) {\n      var ll = new AMap.Pixel(pixel[0], pixel[1]);\n      var lngLat = this.map.containerToLngLat(ll);\n      return {\n        lng: lngLat === null || lngLat === void 0 ? void 0 : lngLat.getLng(),\n        lat: lngLat === null || lngLat === void 0 ? void 0 : lngLat.getLat()\n      };\n    }\n  }, {\n    key: \"lngLatToContainer\",\n    value: function lngLatToContainer(lnglat) {\n      var ll = new AMap.LngLat(lnglat[0], lnglat[1]);\n      var pixel = this.map.lngLatToContainer(ll);\n      return {\n        x: pixel.getX(),\n        y: pixel.getY()\n      };\n    }\n  }, {\n    key: \"init\",\n    value: function () {\n      var _init = _asyncToGenerator(_regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var _this$config, id, _this$config$style, style, _this$config$minZoom, minZoom, _this$config$maxZoom, maxZoom, _this$config$token, token, mapInstance, _this$config$plugin, plugin, rest;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this$config = this.config, id = _this$config.id, _this$config$style = _this$config.style, style = _this$config$style === void 0 ? 'light' : _this$config$style, _this$config$minZoom = _this$config.minZoom, minZoom = _this$config$minZoom === void 0 ? 0 : _this$config$minZoom, _this$config$maxZoom = _this$config.maxZoom, maxZoom = _this$config$maxZoom === void 0 ? 18 : _this$config$maxZoom, _this$config$token = _this$config.token, token = _this$config$token === void 0 ? AMAP_API_KEY : _this$config$token, mapInstance = _this$config.mapInstance, _this$config$plugin = _this$config.plugin, plugin = _this$config$plugin === void 0 ? [] : _this$config$plugin, rest = _objectWithoutProperties(_this$config, [\"id\", \"style\", \"minZoom\", \"maxZoom\", \"token\", \"mapInstance\", \"plugin\"]);\n                _context.next = 3;\n                return new Promise(function (resolve) {\n                  var resolveMap = function resolveMap() {\n                    if (mapInstance) {\n                      _this2.map = mapInstance;\n                      _this2.$mapContainer = _this2.map.getContainer();\n                      setTimeout(function () {\n                        _this2.map.on('camerachange', _this2.handleCameraChanged);\n\n                        resolve();\n                      }, 30);\n                    } else {\n                      _this2.$mapContainer = _this2.creatAmapContainer(id);\n                      var map = new AMap.Map(_this2.$mapContainer, _objectSpread({\n                        mapStyle: _this2.getMapStyle(style),\n                        zooms: [minZoom, maxZoom],\n                        viewMode: '3D'\n                      }, rest));\n                      map.on('camerachange', _this2.handleCameraChanged);\n                      _this2.map = map;\n                      setTimeout(function () {\n                        resolve();\n                      }, 10);\n                    }\n                  };\n\n                  if (!amapLoaded && !mapInstance) {\n                    if (token === AMAP_API_KEY) {\n                      _this2.logger.warn(_this2.configService.getSceneWarninfo('MapToken'));\n                    }\n\n                    amapLoaded = true;\n\n                    _this2.loadAMapScript(\"https://webapi.amap.com/maps?v=\".concat(AMAP_VERSION, \"&key=\").concat(token, \"&plugin=Map3D\").concat(plugin.join(','))).then(function () {\n                      resolveMap();\n\n                      if (pendingResolveQueue.length) {\n                        pendingResolveQueue.forEach(function (r) {\n                          return r();\n                        });\n                        pendingResolveQueue = [];\n                      }\n                    });\n                  } else {\n                    if (amapLoaded && window.AMap || mapInstance) {\n                      resolveMap();\n                    } else {\n                      pendingResolveQueue.push(resolveMap);\n                    }\n                  }\n                });\n\n              case 3:\n                this.viewport = new Viewport();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function init() {\n        return _init.apply(this, arguments);\n      }\n\n      return init;\n    }()\n  }, {\n    key: \"emit\",\n    value: function emit(name) {\n      var _this$eventEmitter;\n\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      (_this$eventEmitter = this.eventEmitter).emit.apply(_this$eventEmitter, [name].concat(args));\n    }\n  }, {\n    key: \"once\",\n    value: function once(name) {\n      var _this$eventEmitter2;\n\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      (_this$eventEmitter2 = this.eventEmitter).once.apply(_this$eventEmitter2, [name].concat(args));\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.map.destroy();\n      delete window.initAMap;\n      var $jsapi = document.getElementById(AMAP_SCRIPT_ID);\n\n      if ($jsapi) {\n        document.head.removeChild($jsapi);\n      }\n    }\n  }, {\n    key: \"getMapContainer\",\n    value: function getMapContainer() {\n      return this.$mapContainer;\n    }\n  }, {\n    key: \"onCameraChanged\",\n    value: function onCameraChanged(callback) {\n      this.cameraChangedCallback = callback;\n    }\n  }, {\n    key: \"getMapStyle\",\n    value: function getMapStyle(name) {\n      return MapTheme[name] ? MapTheme[name] : name;\n    }\n  }, {\n    key: \"creatAmapContainer\",\n    value: function creatAmapContainer(id) {\n      var $wrapper = id;\n\n      if (typeof id === 'string') {\n        $wrapper = document.getElementById(id);\n      }\n\n      var $amapdiv = document.createElement('div');\n      $amapdiv.style.cssText += \"\\n      position: absolute;\\n      top: 0;\\n      height: 100%;\\n      width: 100%;\\n    \";\n      $amapdiv.id = 'l7_amap_div' + mapdivCount++;\n      $wrapper.appendChild($amapdiv);\n      return $amapdiv;\n    }\n  }, {\n    key: \"loadAMapScript\",\n    value: function loadAMapScript(src) {\n      return new Promise(function (resolve, reject) {\n        var script = document.createElement('script');\n        script.src = src;\n\n        script.onload = function () {\n          resolve();\n        };\n\n        script.onerror = reject;\n        document.head.appendChild(script);\n      });\n    }\n  }]);\n\n  return AMapService;\n}(), _temp), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, \"configService\", [_dec2], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, \"logger\", [_dec3], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, \"config\", [_dec4], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, \"coordinateSystemService\", [_dec5], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, \"eventEmitter\", [_dec6], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class2)) || _class);\nexport { AMapService as default };","map":{"version":3,"sources":["../../src/amap/index.ts"],"names":["mapdivCount","AMAP_API_KEY","AMAP_VERSION","AMAP_SCRIPT_ID","amapLoaded","pendingResolveQueue","LNGLAT_OFFSET_ZOOM_THRESHOLD","injectable","AMapService","map","inject","TYPES","markerContainer","$mapContainer","viewport","cameraChangedCallback","mapContainer","amap","DOM","type","handler","MapServiceEvent","size","zoom","center","lng","lat","amapBound","NE","SW","maxlng","minlng","zooms","rotation","p","pixel","extent","AMap","style","lngLat","lnglat","x","y","ll","id","minZoom","maxZoom","token","mapInstance","plugin","rest","config","resolveMap","setTimeout","resolve","mapStyle","viewMode","r","window","name","args","$jsapi","document","callback","handleCameraChanged","fov","near","far","height","pitch","aspect","position","e","bearing","cameraHeight","offsetOrigin","CoordinateSystem","MapTheme","$wrapper","$amapdiv","src","script"],"mappings":"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","sourcesContent":["/**\n * AMapService\n */\nimport {\n  Bounds,\n  CoordinateSystem,\n  ICoordinateSystemService,\n  IGlobalConfigService,\n  ILngLat,\n  ILogService,\n  IMapConfig,\n  IMapService,\n  IPoint,\n  IViewport,\n  MapServiceEvent,\n  MapStyle,\n  TYPES,\n} from '@antv/l7-core';\nimport { DOM } from '@antv/l7-utils';\nimport { inject, injectable } from 'inversify';\nimport { IAMapEvent, IAMapInstance } from '../../typings/index';\nimport { MapTheme } from './theme';\nimport Viewport from './Viewport';\nlet mapdivCount = 0;\n\nconst AMAP_API_KEY: string = '15cd8a57710d40c9b7c0e3cc120f1200';\nconst AMAP_VERSION: string = '1.4.15';\n/**\n * 确保多个场景只引入一个高德地图脚本\n */\nconst AMAP_SCRIPT_ID: string = 'amap-script';\n/**\n * 高德地图脚本是否加载完毕\n */\nlet amapLoaded = false;\n/**\n * 高德地图脚本加载成功等待队列，成功之后依次触发\n */\nlet pendingResolveQueue: Array<() => void> = [];\nconst LNGLAT_OFFSET_ZOOM_THRESHOLD = 12; // 暂时关闭 fix 统一不同坐标系，不同底图的高度位置\n\n/**\n * AMapService\n */\n@injectable()\nexport default class AMapService\n  implements IMapService<AMap.Map & IAMapInstance> {\n  /**\n   * 原始地图实例\n   */\n  public map: AMap.Map & IAMapInstance;\n\n  @inject(TYPES.IGlobalConfigService)\n  private readonly configService: IGlobalConfigService;\n\n  @inject(TYPES.ILogService)\n  private readonly logger: ILogService;\n\n  @inject(TYPES.MapConfig)\n  private readonly config: Partial<IMapConfig>;\n\n  @inject(TYPES.ICoordinateSystemService)\n  private readonly coordinateSystemService: ICoordinateSystemService;\n\n  @inject(TYPES.IEventEmitter)\n  private eventEmitter: any;\n\n  private markerContainer: HTMLElement;\n  private $mapContainer: HTMLElement | null;\n\n  private viewport: Viewport;\n\n  private cameraChangedCallback: (viewport: IViewport) => void;\n\n  public addMarkerContainer(): void {\n    const mapContainer = this.map.getContainer();\n    if (mapContainer !== null) {\n      const amap = mapContainer.getElementsByClassName(\n        'amap-maps',\n      )[0] as HTMLElement;\n      this.markerContainer = DOM.create('div', 'l7-marker-container', amap);\n    }\n  }\n  public getMarkerContainer(): HTMLElement {\n    return this.markerContainer;\n  }\n\n  //  map event\n  public on(type: string, handler: (...args: any[]) => void): void {\n    if (MapServiceEvent.indexOf(type) !== -1) {\n      this.eventEmitter.on(type, handler);\n    } else {\n      this.map.on(type, handler);\n    }\n  }\n  public off(type: string, handler: (...args: any[]) => void): void {\n    if (MapServiceEvent.indexOf(type) !== -1) {\n      this.eventEmitter.off(type, handler);\n    } else {\n      this.map.off(type, handler);\n    }\n  }\n\n  public getContainer(): HTMLElement | null {\n    return this.map.getContainer();\n  }\n\n  public getSize(): [number, number] {\n    const size = this.map.getSize();\n    return [size.getWidth(), size.getHeight()];\n  }\n\n  public getType() {\n    return 'amap';\n  }\n  public getZoom(): number {\n    // 统一返回 Mapbox 缩放等级\n    return this.map.getZoom() - 1;\n  }\n\n  public setZoom(zoom: number): void {\n    return this.map.setZoom(zoom);\n  }\n\n  public getCenter(): ILngLat {\n    const center = this.map.getCenter();\n    return {\n      lng: center.getLng(),\n      lat: center.getLat(),\n    };\n  }\n\n  public getPitch(): number {\n    return this.map.getPitch();\n  }\n\n  public getRotation(): number {\n    // 统一返回逆时针旋转角度\n    return 360 - this.map.getRotation();\n  }\n\n  public getBounds(): Bounds {\n    // @ts-ignore\n    const amapBound = this.map.getBounds().toBounds();\n    const NE = amapBound.getNorthEast();\n    const SW = amapBound.getSouthWest();\n    const center = this.getCenter();\n    const maxlng =\n      center.lng > NE.getLng() || center.lng < SW.getLng()\n        ? 180 - NE.getLng()\n        : NE.getLng();\n    const minlng = center.lng < SW.getLng() ? SW.getLng() - 180 : SW.getLng();\n    // 兼容 Mapbox，统一返回西南、东北\n    return [\n      [minlng, SW.getLat()],\n      [maxlng, NE.getLat()],\n    ];\n  }\n\n  public getMinZoom(): number {\n    const zooms = this.map.get('zooms') as [number, number];\n    return zooms[0] - 1;\n  }\n  public getMaxZoom(): number {\n    const zooms = this.map.get('zooms') as [number, number];\n    return zooms[1] - 1;\n  }\n  public setRotation(rotation: number): void {\n    return this.map.setRotation(rotation);\n  }\n\n  public zoomIn(): void {\n    this.map.zoomIn();\n  }\n\n  public zoomOut(): void {\n    this.map.zoomOut();\n  }\n\n  public panTo(p: [number, number]): void {\n    this.map.panTo(p);\n  }\n  public panBy(pixel: [number, number]): void {\n    this.map.panTo(pixel);\n  }\n  public fitBounds(extent: Bounds): void {\n    this.map.setBounds(\n      new AMap.Bounds([extent[0][0], extent[0][1], extent[1][0], extent[1][1]]),\n    );\n  }\n  public setZoomAndCenter(zoom: number, center: [number, number]): void {\n    this.map.setZoomAndCenter(zoom, center);\n  }\n  public setMapStyle(style: string): void {\n    this.map.setMapStyle(this.getMapStyle(style));\n  }\n  public pixelToLngLat(pixel: [number, number]): ILngLat {\n    const lngLat = this.map.pixelToLngLat(new AMap.Pixel(pixel[0], pixel[1]));\n    return { lng: lngLat.getLng(), lat: lngLat.getLat() };\n  }\n  public lngLatToPixel(lnglat: [number, number]): IPoint {\n    const p = this.map.lnglatToPixel(new AMap.LngLat(lnglat[0], lnglat[1]));\n    return {\n      x: p.getX(),\n      y: p.getY(),\n    };\n  }\n  public containerToLngLat(pixel: [number, number]): ILngLat {\n    const ll = new AMap.Pixel(pixel[0], pixel[1]);\n    const lngLat = this.map.containerToLngLat(ll);\n    return {\n      lng: lngLat?.getLng(),\n      lat: lngLat?.getLat(),\n    };\n  }\n  public lngLatToContainer(lnglat: [number, number]): IPoint {\n    const ll = new AMap.LngLat(lnglat[0], lnglat[1]);\n    const pixel = this.map.lngLatToContainer(ll);\n    return {\n      x: pixel.getX(),\n      y: pixel.getY(),\n    };\n  }\n\n  public async init(): Promise<void> {\n    const {\n      id,\n      style = 'light',\n      minZoom = 0,\n      maxZoom = 18,\n      token = AMAP_API_KEY,\n      mapInstance,\n      plugin = [],\n      ...rest\n    } = this.config;\n    // 高德地图创建独立的container；\n    // tslint:disable-next-line:typedef\n    await new Promise((resolve) => {\n      const resolveMap = () => {\n        if (mapInstance) {\n          this.map = mapInstance as AMap.Map & IAMapInstance;\n          this.$mapContainer = this.map.getContainer();\n          setTimeout(() => {\n            this.map.on('camerachange', this.handleCameraChanged);\n            resolve();\n          }, 30);\n        } else {\n          this.$mapContainer = this.creatAmapContainer(\n            id as string | HTMLDivElement,\n          );\n\n          const map = new AMap.Map(this.$mapContainer, {\n            mapStyle: this.getMapStyle(style as string),\n            zooms: [minZoom, maxZoom],\n            viewMode: '3D',\n            ...rest,\n          });\n          // 监听地图相机事件\n          map.on('camerachange', this.handleCameraChanged);\n          // @ts-ignore\n          this.map = map;\n          setTimeout(() => {\n            resolve();\n          }, 10);\n        }\n      };\n      if (!amapLoaded && !mapInstance) {\n        if (token === AMAP_API_KEY) {\n          this.logger.warn(this.configService.getSceneWarninfo('MapToken'));\n        }\n        amapLoaded = true;\n        this.loadAMapScript(\n          `https://webapi.amap.com/maps?v=${AMAP_VERSION}&key=${token}&plugin=Map3D${plugin.join(\n            ',',\n          )}`,\n        ).then(() => {\n          resolveMap();\n          if (pendingResolveQueue.length) {\n            pendingResolveQueue.forEach((r) => r());\n            pendingResolveQueue = [];\n          }\n        });\n      } else {\n        if ((amapLoaded && window.AMap) || mapInstance) {\n          resolveMap();\n        } else {\n          pendingResolveQueue.push(resolveMap);\n        }\n      }\n    });\n\n    this.viewport = new Viewport();\n  }\n  public emit(name: string, ...args: any[]) {\n    this.eventEmitter.emit(name, ...args);\n  }\n\n  public once(name: string, ...args: any[]) {\n    this.eventEmitter.once(name, ...args);\n  }\n\n  public destroy() {\n    this.map.destroy();\n    // @ts-ignore\n    delete window.initAMap;\n    const $jsapi = document.getElementById(AMAP_SCRIPT_ID);\n    if ($jsapi) {\n      document.head.removeChild($jsapi);\n    }\n  }\n\n  public getMapContainer() {\n    return this.$mapContainer;\n  }\n\n  public onCameraChanged(callback: (viewport: IViewport) => void): void {\n    this.cameraChangedCallback = callback;\n  }\n\n  private handleCameraChanged = (e: IAMapEvent): void => {\n    const {\n      fov,\n      near,\n      far,\n      height,\n      pitch,\n      rotation,\n      aspect,\n      position,\n    } = e.camera;\n    const { lng, lat } = this.getCenter();\n    if (this.cameraChangedCallback) {\n      // resync viewport\n      this.viewport.syncWithMapCamera({\n        aspect,\n        // AMap 定义 rotation 为顺时针方向，而 Mapbox 为逆时针\n        // @see https://docs.mapbox.com/mapbox-gl-js/api/#map#getbearing\n        bearing: 360 - rotation,\n        far,\n        fov,\n        cameraHeight: height,\n        near,\n        pitch,\n        // AMap 定义的缩放等级 与 Mapbox 相差 1\n        zoom: this.map.getZoom() - 1,\n        center: [lng, lat],\n        offsetOrigin: [position.x, position.y],\n      });\n\n      // set coordinate system\n      if (this.viewport.getZoom() > LNGLAT_OFFSET_ZOOM_THRESHOLD) {\n        this.coordinateSystemService.setCoordinateSystem(\n          CoordinateSystem.P20_OFFSET,\n        );\n      } else {\n        this.coordinateSystemService.setCoordinateSystem(CoordinateSystem.P20);\n      }\n      this.cameraChangedCallback(this.viewport);\n    }\n  };\n\n  private getMapStyle(name: string): string {\n    return MapTheme[name] ? MapTheme[name] : name;\n  }\n  private creatAmapContainer(id: string | HTMLDivElement) {\n    let $wrapper = id as HTMLDivElement;\n    if (typeof id === 'string') {\n      $wrapper = document.getElementById(id) as HTMLDivElement;\n    }\n    const $amapdiv = document.createElement('div');\n    $amapdiv.style.cssText += `\n      position: absolute;\n      top: 0;\n      height: 100%;\n      width: 100%;\n    `;\n    $amapdiv.id = 'l7_amap_div' + mapdivCount++;\n    $wrapper.appendChild($amapdiv);\n    return $amapdiv;\n  }\n  private loadAMapScript(src: string) {\n    return new Promise((resolve, reject) => {\n      const script = document.createElement('script');\n      script.src = src;\n      script.onload = () => {\n        resolve();\n      };\n      script.onerror = reject;\n      document.head.appendChild(script);\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}