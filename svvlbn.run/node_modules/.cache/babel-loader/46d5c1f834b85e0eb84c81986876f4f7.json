{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar METADATA_KEY = require(\"../constants/metadata_keys\");\n\nvar metadata_1 = require(\"../planning/metadata\");\n\nvar decorator_utils_1 = require(\"./decorator_utils\");\n\nfunction optional() {\n  return function (target, targetKey, index) {\n    var metadata = new metadata_1.Metadata(METADATA_KEY.OPTIONAL_TAG, true);\n\n    if (typeof index === \"number\") {\n      decorator_utils_1.tagParameter(target, targetKey, index, metadata);\n    } else {\n      decorator_utils_1.tagProperty(target, targetKey, metadata);\n    }\n  };\n}\n\nexports.optional = optional;","map":{"version":3,"sources":["/Users/renshihang/Desktop/svvlbn.run/node_modules/inversify/lib/annotation/optional.js"],"names":["Object","defineProperty","exports","value","METADATA_KEY","require","metadata_1","decorator_utils_1","optional","target","targetKey","index","metadata","Metadata","OPTIONAL_TAG","tagParameter","tagProperty"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,YAAY,GAAGC,OAAO,CAAC,4BAAD,CAA1B;;AACA,IAAIC,UAAU,GAAGD,OAAO,CAAC,sBAAD,CAAxB;;AACA,IAAIE,iBAAiB,GAAGF,OAAO,CAAC,mBAAD,CAA/B;;AACA,SAASG,QAAT,GAAoB;AAChB,SAAO,UAAUC,MAAV,EAAkBC,SAAlB,EAA6BC,KAA7B,EAAoC;AACvC,QAAIC,QAAQ,GAAG,IAAIN,UAAU,CAACO,QAAf,CAAwBT,YAAY,CAACU,YAArC,EAAmD,IAAnD,CAAf;;AACA,QAAI,OAAOH,KAAP,KAAiB,QAArB,EAA+B;AAC3BJ,MAAAA,iBAAiB,CAACQ,YAAlB,CAA+BN,MAA/B,EAAuCC,SAAvC,EAAkDC,KAAlD,EAAyDC,QAAzD;AACH,KAFD,MAGK;AACDL,MAAAA,iBAAiB,CAACS,WAAlB,CAA8BP,MAA9B,EAAsCC,SAAtC,EAAiDE,QAAjD;AACH;AACJ,GARD;AASH;;AACDV,OAAO,CAACM,QAAR,GAAmBA,QAAnB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar METADATA_KEY = require(\"../constants/metadata_keys\");\nvar metadata_1 = require(\"../planning/metadata\");\nvar decorator_utils_1 = require(\"./decorator_utils\");\nfunction optional() {\n    return function (target, targetKey, index) {\n        var metadata = new metadata_1.Metadata(METADATA_KEY.OPTIONAL_TAG, true);\n        if (typeof index === \"number\") {\n            decorator_utils_1.tagParameter(target, targetKey, index, metadata);\n        }\n        else {\n            decorator_utils_1.tagProperty(target, targetKey, metadata);\n        }\n    };\n}\nexports.optional = optional;\n"]},"metadata":{},"sourceType":"script"}