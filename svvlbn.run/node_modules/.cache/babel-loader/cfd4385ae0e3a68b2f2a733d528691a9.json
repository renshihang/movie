{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar metadata_1 = require(\"../planning/metadata\");\n\nvar decorator_utils_1 = require(\"./decorator_utils\");\n\nfunction tagged(metadataKey, metadataValue) {\n  return function (target, targetKey, index) {\n    var metadata = new metadata_1.Metadata(metadataKey, metadataValue);\n\n    if (typeof index === \"number\") {\n      decorator_utils_1.tagParameter(target, targetKey, index, metadata);\n    } else {\n      decorator_utils_1.tagProperty(target, targetKey, metadata);\n    }\n  };\n}\n\nexports.tagged = tagged;","map":{"version":3,"sources":["/Users/renshihang/Desktop/svvlbn.run/node_modules/inversify/lib/annotation/tagged.js"],"names":["Object","defineProperty","exports","value","metadata_1","require","decorator_utils_1","tagged","metadataKey","metadataValue","target","targetKey","index","metadata","Metadata","tagParameter","tagProperty"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,UAAU,GAAGC,OAAO,CAAC,sBAAD,CAAxB;;AACA,IAAIC,iBAAiB,GAAGD,OAAO,CAAC,mBAAD,CAA/B;;AACA,SAASE,MAAT,CAAgBC,WAAhB,EAA6BC,aAA7B,EAA4C;AACxC,SAAO,UAAUC,MAAV,EAAkBC,SAAlB,EAA6BC,KAA7B,EAAoC;AACvC,QAAIC,QAAQ,GAAG,IAAIT,UAAU,CAACU,QAAf,CAAwBN,WAAxB,EAAqCC,aAArC,CAAf;;AACA,QAAI,OAAOG,KAAP,KAAiB,QAArB,EAA+B;AAC3BN,MAAAA,iBAAiB,CAACS,YAAlB,CAA+BL,MAA/B,EAAuCC,SAAvC,EAAkDC,KAAlD,EAAyDC,QAAzD;AACH,KAFD,MAGK;AACDP,MAAAA,iBAAiB,CAACU,WAAlB,CAA8BN,MAA9B,EAAsCC,SAAtC,EAAiDE,QAAjD;AACH;AACJ,GARD;AASH;;AACDX,OAAO,CAACK,MAAR,GAAiBA,MAAjB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar metadata_1 = require(\"../planning/metadata\");\nvar decorator_utils_1 = require(\"./decorator_utils\");\nfunction tagged(metadataKey, metadataValue) {\n    return function (target, targetKey, index) {\n        var metadata = new metadata_1.Metadata(metadataKey, metadataValue);\n        if (typeof index === \"number\") {\n            decorator_utils_1.tagParameter(target, targetKey, index, metadata);\n        }\n        else {\n            decorator_utils_1.tagProperty(target, targetKey, metadata);\n        }\n    };\n}\nexports.tagged = tagged;\n"]},"metadata":{},"sourceType":"script"}