{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _initializerDefineProperty from \"@babel/runtime/helpers/initializerDefineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _applyDecoratedDescriptor from \"@babel/runtime/helpers/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"@babel/runtime/helpers/initializerWarningHelper\";\n\nvar _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _temp;\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport { CoordinateSystem, MapServiceEvent, TYPES } from '@antv/l7-core';\nimport { DOM } from '@antv/l7-utils';\nimport { inject, injectable } from 'inversify';\nimport mapboxgl from 'mapbox-gl';\nimport Viewport from './Viewport';\nvar EventMap = {\n  mapmove: 'move',\n  camerachange: 'move'\n};\nimport { MapTheme } from './theme';\nvar LNGLAT_OFFSET_ZOOM_THRESHOLD = 12;\nvar MAPBOX_API_KEY = 'pk.eyJ1IjoibHp4dWUiLCJhIjoiYnhfTURyRSJ9.Ugm314vAKPHBzcPmY1p4KQ';\nvar MapboxService = (_dec = injectable(), _dec2 = inject(TYPES.MapConfig), _dec3 = inject(TYPES.IGlobalConfigService), _dec4 = inject(TYPES.ILogService), _dec5 = inject(TYPES.ICoordinateSystemService), _dec6 = inject(TYPES.IEventEmitter), _dec(_class = (_class2 = (_temp = function () {\n  function MapboxService() {\n    var _this = this;\n\n    _classCallCheck(this, MapboxService);\n\n    this.map = void 0;\n\n    _initializerDefineProperty(this, \"config\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"configService\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"logger\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"coordinateSystemService\", _descriptor4, this);\n\n    _initializerDefineProperty(this, \"eventEmitter\", _descriptor5, this);\n\n    this.viewport = void 0;\n    this.markerContainer = void 0;\n    this.cameraChangedCallback = void 0;\n    this.$mapContainer = void 0;\n\n    this.handleCameraChanged = function () {\n      var _this$map$getCenter$w = _this.map.getCenter().wrap(),\n          lat = _this$map$getCenter$w.lat,\n          lng = _this$map$getCenter$w.lng;\n\n      _this.viewport.syncWithMapCamera({\n        bearing: _this.map.getBearing(),\n        center: [lng, lat],\n        viewportHeight: _this.map.transform.height,\n        pitch: _this.map.getPitch(),\n        viewportWidth: _this.map.transform.width,\n        zoom: _this.map.getZoom(),\n        cameraHeight: 0\n      });\n\n      if (_this.viewport.getZoom() > LNGLAT_OFFSET_ZOOM_THRESHOLD) {\n        _this.coordinateSystemService.setCoordinateSystem(CoordinateSystem.LNGLAT_OFFSET);\n      } else {\n        _this.coordinateSystemService.setCoordinateSystem(CoordinateSystem.LNGLAT);\n      }\n\n      _this.cameraChangedCallback(_this.viewport);\n    };\n  }\n\n  _createClass(MapboxService, [{\n    key: \"addMarkerContainer\",\n    value: function addMarkerContainer() {\n      var container = this.map.getCanvasContainer();\n      this.markerContainer = DOM.create('div', 'l7-marker-container', container);\n    }\n  }, {\n    key: \"getMarkerContainer\",\n    value: function getMarkerContainer() {\n      return this.markerContainer;\n    }\n  }, {\n    key: \"on\",\n    value: function on(type, handle) {\n      if (MapServiceEvent.indexOf(type) !== -1) {\n        this.eventEmitter.on(type, handle);\n      } else {\n        this.map.on(EventMap[type] || type, handle);\n      }\n    }\n  }, {\n    key: \"off\",\n    value: function off(type, handle) {\n      this.map.off(EventMap[type] || type, handle);\n    }\n  }, {\n    key: \"getContainer\",\n    value: function getContainer() {\n      return this.map.getContainer();\n    }\n  }, {\n    key: \"getSize\",\n    value: function getSize() {\n      var size = this.map.transform;\n      return [size.width, size.height];\n    }\n  }, {\n    key: \"getType\",\n    value: function getType() {\n      return 'mapbox';\n    }\n  }, {\n    key: \"getZoom\",\n    value: function getZoom() {\n      return this.map.getZoom();\n    }\n  }, {\n    key: \"setZoom\",\n    value: function setZoom(zoom) {\n      return this.map.setZoom(zoom);\n    }\n  }, {\n    key: \"getCenter\",\n    value: function getCenter() {\n      return this.map.getCenter();\n    }\n  }, {\n    key: \"getPitch\",\n    value: function getPitch() {\n      return this.map.getPitch();\n    }\n  }, {\n    key: \"getRotation\",\n    value: function getRotation() {\n      return this.map.getBearing();\n    }\n  }, {\n    key: \"getBounds\",\n    value: function getBounds() {\n      return this.map.getBounds().toArray();\n    }\n  }, {\n    key: \"getMinZoom\",\n    value: function getMinZoom() {\n      return this.map.getMinZoom();\n    }\n  }, {\n    key: \"getMaxZoom\",\n    value: function getMaxZoom() {\n      return this.map.getMaxZoom();\n    }\n  }, {\n    key: \"setRotation\",\n    value: function setRotation(rotation) {\n      this.map.setBearing(rotation);\n    }\n  }, {\n    key: \"zoomIn\",\n    value: function zoomIn() {\n      this.map.zoomIn();\n    }\n  }, {\n    key: \"zoomOut\",\n    value: function zoomOut() {\n      this.map.zoomOut();\n    }\n  }, {\n    key: \"panTo\",\n    value: function panTo(p) {\n      this.map.panTo(p);\n    }\n  }, {\n    key: \"panBy\",\n    value: function panBy(pixel) {\n      this.panTo(pixel);\n    }\n  }, {\n    key: \"fitBounds\",\n    value: function fitBounds(bound) {\n      this.map.fitBounds(bound);\n    }\n  }, {\n    key: \"setMaxZoom\",\n    value: function setMaxZoom(max) {\n      this.map.setMaxZoom(max);\n    }\n  }, {\n    key: \"setMinZoom\",\n    value: function setMinZoom(min) {\n      this.map.setMinZoom(min);\n    }\n  }, {\n    key: \"setZoomAndCenter\",\n    value: function setZoomAndCenter(zoom, center) {\n      this.map.flyTo({\n        zoom: zoom,\n        center: center\n      });\n    }\n  }, {\n    key: \"setMapStyle\",\n    value: function setMapStyle(style) {\n      this.map.setStyle(this.getMapStyle(style));\n    }\n  }, {\n    key: \"pixelToLngLat\",\n    value: function pixelToLngLat(pixel) {\n      return this.map.unproject(pixel);\n    }\n  }, {\n    key: \"lngLatToPixel\",\n    value: function lngLatToPixel(lnglat) {\n      return this.map.project(lnglat);\n    }\n  }, {\n    key: \"containerToLngLat\",\n    value: function containerToLngLat(pixel) {\n      return this.map.unproject(pixel);\n    }\n  }, {\n    key: \"lngLatToContainer\",\n    value: function lngLatToContainer(lnglat) {\n      return this.map.project(lnglat);\n    }\n  }, {\n    key: \"init\",\n    value: function () {\n      var _init = _asyncToGenerator(_regeneratorRuntime.mark(function _callee() {\n        var _this$config, _this$config$id, id, _this$config$attribut, attributionControl, _this$config$style, style, _this$config$token, token, _this$config$rotation, rotation, mapInstance, rest;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this$config = this.config, _this$config$id = _this$config.id, id = _this$config$id === void 0 ? 'map' : _this$config$id, _this$config$attribut = _this$config.attributionControl, attributionControl = _this$config$attribut === void 0 ? false : _this$config$attribut, _this$config$style = _this$config.style, style = _this$config$style === void 0 ? 'light' : _this$config$style, _this$config$token = _this$config.token, token = _this$config$token === void 0 ? MAPBOX_API_KEY : _this$config$token, _this$config$rotation = _this$config.rotation, rotation = _this$config$rotation === void 0 ? 0 : _this$config$rotation, mapInstance = _this$config.mapInstance, rest = _objectWithoutProperties(_this$config, [\"id\", \"attributionControl\", \"style\", \"token\", \"rotation\", \"mapInstance\"]);\n                this.viewport = new Viewport();\n\n                if (!mapInstance && !mapboxgl) {\n                  this.logger.error(this.configService.getSceneWarninfo('SDK'));\n                }\n\n                if (token === MAPBOX_API_KEY && style !== 'blank' && !mapboxgl.accessToken && !mapInstance) {\n                  this.logger.warn(this.configService.getSceneWarninfo('MapToken'));\n                }\n\n                if (!mapInstance && !mapboxgl.accessToken) {\n                  mapboxgl.accessToken = token;\n                }\n\n                if (mapInstance) {\n                  this.map = mapInstance;\n                  this.$mapContainer = this.map.getContainer();\n                } else {\n                  this.$mapContainer = this.creatAmapContainer(id);\n                  this.map = new mapboxgl.Map(_objectSpread({\n                    container: id,\n                    style: this.getMapStyle(style),\n                    attributionControl: attributionControl,\n                    bearing: rotation\n                  }, rest));\n                }\n\n                this.map.on('load', this.handleCameraChanged);\n                this.map.on('move', this.handleCameraChanged);\n                this.handleCameraChanged();\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function init() {\n        return _init.apply(this, arguments);\n      }\n\n      return init;\n    }()\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.eventEmitter.removeAllListeners();\n\n      if (this.map) {\n        this.map.remove();\n        this.$mapContainer = null;\n        this.removeLogoControl();\n      }\n    }\n  }, {\n    key: \"emit\",\n    value: function emit(name) {\n      var _this$eventEmitter;\n\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      (_this$eventEmitter = this.eventEmitter).emit.apply(_this$eventEmitter, [name].concat(args));\n    }\n  }, {\n    key: \"once\",\n    value: function once(name) {\n      var _this$eventEmitter2;\n\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      (_this$eventEmitter2 = this.eventEmitter).once.apply(_this$eventEmitter2, [name].concat(args));\n    }\n  }, {\n    key: \"getMapContainer\",\n    value: function getMapContainer() {\n      return this.$mapContainer;\n    }\n  }, {\n    key: \"onCameraChanged\",\n    value: function onCameraChanged(callback) {\n      this.cameraChangedCallback = callback;\n    }\n  }, {\n    key: \"creatAmapContainer\",\n    value: function creatAmapContainer(id) {\n      var $wrapper = id;\n\n      if (typeof id === 'string') {\n        $wrapper = document.getElementById(id);\n      }\n\n      return $wrapper;\n    }\n  }, {\n    key: \"removeLogoControl\",\n    value: function removeLogoControl() {\n      var controls = this.map._controls;\n      var logoCtr = controls.find(function (ctr) {\n        if (ctr.hasOwnProperty('_updateLogo')) {\n          return true;\n        }\n      });\n\n      if (logoCtr) {\n        this.map.removeControl(logoCtr);\n      }\n    }\n  }, {\n    key: \"getMapStyle\",\n    value: function getMapStyle(name) {\n      if (typeof name !== 'string') {\n        return name;\n      }\n\n      return MapTheme[name] ? MapTheme[name] : name;\n    }\n  }]);\n\n  return MapboxService;\n}(), _temp), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, \"config\", [_dec2], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, \"configService\", [_dec3], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, \"logger\", [_dec4], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, \"coordinateSystemService\", [_dec5], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, \"eventEmitter\", [_dec6], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class2)) || _class);\nexport { MapboxService as default };","map":{"version":3,"sources":["../../src/mapbox/index.ts"],"names":["EventMap","mapmove","camerachange","LNGLAT_OFFSET_ZOOM_THRESHOLD","MAPBOX_API_KEY","injectable","MapboxService","map","inject","TYPES","viewport","markerContainer","cameraChangedCallback","$mapContainer","container","DOM","type","handle","MapServiceEvent","size","zoom","rotation","p","pixel","bound","max","min","center","style","lnglat","id","attributionControl","token","mapInstance","rest","config","mapboxgl","bearing","name","args","callback","handleCameraChanged","lat","lng","viewportHeight","pitch","viewportWidth","cameraHeight","CoordinateSystem","$wrapper","document","controls","logoCtr","ctr","MapTheme"],"mappings":"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","sourcesContent":["/**\n * MapboxService\n */\nimport {\n  Bounds,\n  CoordinateSystem,\n  ICoordinateSystemService,\n  IGlobalConfigService,\n  ILngLat,\n  ILogService,\n  IMapConfig,\n  IMapService,\n  IPoint,\n  IViewport,\n  MapServiceEvent,\n  MapStyle,\n  TYPES,\n} from '@antv/l7-core';\nimport { DOM } from '@antv/l7-utils';\nimport { inject, injectable } from 'inversify';\nimport mapboxgl, { IControl, Map } from 'mapbox-gl';\nimport { IMapboxInstance } from '../../typings/index';\nimport Viewport from './Viewport';\nconst EventMap: {\n  [key: string]: any;\n} = {\n  mapmove: 'move',\n  camerachange: 'move',\n};\nimport { MapTheme } from './theme';\n\nconst LNGLAT_OFFSET_ZOOM_THRESHOLD = 12;\nconst MAPBOX_API_KEY =\n  'pk.eyJ1IjoibHp4dWUiLCJhIjoiYnhfTURyRSJ9.Ugm314vAKPHBzcPmY1p4KQ';\n/**\n * AMapService\n */\n@injectable()\nexport default class MapboxService\n  implements IMapService<Map & IMapboxInstance> {\n  public map: Map & IMapboxInstance;\n\n  @inject(TYPES.MapConfig)\n  private readonly config: Partial<IMapConfig>;\n\n  @inject(TYPES.IGlobalConfigService)\n  private readonly configService: IGlobalConfigService;\n\n  @inject(TYPES.ILogService)\n  private readonly logger: ILogService;\n  @inject(TYPES.ICoordinateSystemService)\n  private readonly coordinateSystemService: ICoordinateSystemService;\n\n  @inject(TYPES.IEventEmitter)\n  private eventEmitter: any;\n  private viewport: Viewport;\n  private markerContainer: HTMLElement;\n  private cameraChangedCallback: (viewport: IViewport) => void;\n  private $mapContainer: HTMLElement | null;\n\n  // init\n  public addMarkerContainer(): void {\n    const container = this.map.getCanvasContainer();\n    this.markerContainer = DOM.create('div', 'l7-marker-container', container);\n  }\n\n  public getMarkerContainer(): HTMLElement {\n    return this.markerContainer;\n  }\n\n  //  map event\n  public on(type: string, handle: (...args: any[]) => void): void {\n    if (MapServiceEvent.indexOf(type) !== -1) {\n      this.eventEmitter.on(type, handle);\n    } else {\n      // 统一事件名称\n      this.map.on(EventMap[type] || type, handle);\n    }\n  }\n  public off(type: string, handle: (...args: any[]) => void): void {\n    this.map.off(EventMap[type] || type, handle);\n  }\n\n  public getContainer(): HTMLElement | null {\n    return this.map.getContainer();\n  }\n\n  public getSize(): [number, number] {\n    const size = this.map.transform;\n    return [size.width, size.height];\n  }\n  // get mapStatus method\n\n  public getType() {\n    return 'mapbox';\n  }\n\n  public getZoom(): number {\n    return this.map.getZoom();\n  }\n\n  public setZoom(zoom: number) {\n    return this.map.setZoom(zoom);\n  }\n\n  public getCenter(): ILngLat {\n    return this.map.getCenter();\n  }\n\n  public getPitch(): number {\n    return this.map.getPitch();\n  }\n\n  public getRotation(): number {\n    return this.map.getBearing();\n  }\n\n  public getBounds(): Bounds {\n    return this.map.getBounds().toArray() as Bounds;\n  }\n\n  public getMinZoom(): number {\n    return this.map.getMinZoom();\n  }\n\n  public getMaxZoom(): number {\n    return this.map.getMaxZoom();\n  }\n\n  public setRotation(rotation: number): void {\n    this.map.setBearing(rotation);\n  }\n\n  public zoomIn(): void {\n    this.map.zoomIn();\n  }\n\n  public zoomOut(): void {\n    this.map.zoomOut();\n  }\n\n  public panTo(p: [number, number]): void {\n    this.map.panTo(p);\n  }\n\n  public panBy(pixel: [number, number]): void {\n    this.panTo(pixel);\n  }\n\n  public fitBounds(bound: Bounds): void {\n    this.map.fitBounds(bound);\n  }\n\n  public setMaxZoom(max: number): void {\n    this.map.setMaxZoom(max);\n  }\n\n  public setMinZoom(min: number): void {\n    this.map.setMinZoom(min);\n  }\n\n  public setZoomAndCenter(zoom: number, center: [number, number]): void {\n    this.map.flyTo({\n      zoom,\n      center,\n    });\n  }\n\n  public setMapStyle(style: string): void {\n    this.map.setStyle(this.getMapStyle(style));\n  }\n  // TODO: 计算像素坐标\n  public pixelToLngLat(pixel: [number, number]): ILngLat {\n    return this.map.unproject(pixel);\n  }\n\n  public lngLatToPixel(lnglat: [number, number]): IPoint {\n    return this.map.project(lnglat);\n  }\n\n  public containerToLngLat(pixel: [number, number]): ILngLat {\n    return this.map.unproject(pixel);\n  }\n\n  public lngLatToContainer(lnglat: [number, number]): IPoint {\n    return this.map.project(lnglat);\n  }\n\n  public async init(): Promise<void> {\n    const {\n      id = 'map',\n      attributionControl = false,\n      style = 'light',\n      token = MAPBOX_API_KEY,\n      rotation = 0,\n      mapInstance,\n      ...rest\n    } = this.config;\n\n    this.viewport = new Viewport();\n\n    /**\n     * TODO: 使用 mapbox v0.53.x 版本 custom layer，需要共享 gl context\n     * @see https://github.com/mapbox/mapbox-gl-js/blob/master/debug/threejs.html#L61-L64\n     */\n\n    // 判断全局 mapboxgl 对象的加载\n    if (!mapInstance && !mapboxgl) {\n      // 用户有时传递进来的实例是继承于 mapbox 实例化的，不一定是 mapboxgl 对象。\n      this.logger.error(this.configService.getSceneWarninfo('SDK'));\n    }\n\n    if (\n      token === MAPBOX_API_KEY &&\n      style !== 'blank' &&\n      !mapboxgl.accessToken &&\n      !mapInstance // 如果用户传递了 mapInstance，应该不去干预实例的 accessToken。\n    ) {\n      this.logger.warn(this.configService.getSceneWarninfo('MapToken'));\n    }\n\n    // 判断是否设置了 accessToken\n    if (!mapInstance && !mapboxgl.accessToken) {\n      // 用户有时传递进来的实例是继承于 mapbox 实例化的，不一定是 mapboxgl 对象。\n      mapboxgl.accessToken = token;\n    }\n\n    if (mapInstance) {\n      // @ts-ignore\n      this.map = mapInstance;\n      this.$mapContainer = this.map.getContainer();\n    } else {\n      this.$mapContainer = this.creatAmapContainer(id);\n      // @ts-ignore\n      this.map = new mapboxgl.Map({\n        container: id,\n        style: this.getMapStyle(style),\n        attributionControl,\n        bearing: rotation,\n        ...rest,\n      });\n    }\n    this.map.on('load', this.handleCameraChanged);\n    this.map.on('move', this.handleCameraChanged);\n\n    // 不同于高德地图，需要手动触发首次渲染\n    this.handleCameraChanged();\n  }\n\n  public destroy() {\n    this.eventEmitter.removeAllListeners();\n    if (this.map) {\n      this.map.remove();\n      this.$mapContainer = null;\n      this.removeLogoControl();\n    }\n  }\n  public emit(name: string, ...args: any[]) {\n    this.eventEmitter.emit(name, ...args);\n  }\n  public once(name: string, ...args: any[]) {\n    this.eventEmitter.once(name, ...args);\n  }\n\n  public getMapContainer() {\n    return this.$mapContainer;\n  }\n\n  public onCameraChanged(callback: (viewport: IViewport) => void): void {\n    this.cameraChangedCallback = callback;\n  }\n\n  private handleCameraChanged = () => {\n    // @see https://github.com/mapbox/mapbox-gl-js/issues/2572\n    const { lat, lng } = this.map.getCenter().wrap();\n\n    // resync\n    this.viewport.syncWithMapCamera({\n      bearing: this.map.getBearing(),\n      center: [lng, lat],\n      viewportHeight: this.map.transform.height,\n      pitch: this.map.getPitch(),\n      viewportWidth: this.map.transform.width,\n      zoom: this.map.getZoom(),\n      // mapbox 中固定相机高度为 viewport 高度的 1.5 倍\n      cameraHeight: 0,\n    });\n\n    // set coordinate system\n    if (this.viewport.getZoom() > LNGLAT_OFFSET_ZOOM_THRESHOLD) {\n      this.coordinateSystemService.setCoordinateSystem(\n        CoordinateSystem.LNGLAT_OFFSET,\n      );\n    } else {\n      this.coordinateSystemService.setCoordinateSystem(CoordinateSystem.LNGLAT);\n    }\n\n    this.cameraChangedCallback(this.viewport);\n  };\n\n  private creatAmapContainer(id: string | HTMLDivElement) {\n    let $wrapper = id as HTMLDivElement;\n    if (typeof id === 'string') {\n      $wrapper = document.getElementById(id) as HTMLDivElement;\n    }\n    return $wrapper;\n  }\n\n  private removeLogoControl(): void {\n    // @ts-ignore\n    const controls = this.map._controls as IControl[];\n    const logoCtr = controls.find((ctr: IControl) => {\n      if (ctr.hasOwnProperty('_updateLogo')) {\n        return true;\n      }\n    });\n    if (logoCtr) {\n      this.map.removeControl(logoCtr);\n    }\n  }\n\n  private getMapStyle(name: MapStyle) {\n    if (typeof name !== 'string') {\n      return name;\n    }\n    return MapTheme[name] ? MapTheme[name] : name;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}