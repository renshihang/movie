import { IControlService, ILayerService, IMapService, IRendererService } from '@antv/l7-core';
import { EventEmitter } from 'eventemitter3';
import { Container } from 'inversify';
export declare enum PositionType {
    'TOPRIGHT' = "topright",
    'TOPLEFT' = "topleft",
    'BOTTOMRIGHT' = "bottomright",
    'BOTTOMLEFT' = "bottomleft"
}
export declare type PositionName = 'topright' | 'topleft' | 'bottomright' | 'bottomleft';
export interface IControlOption {
    position: PositionName;
    [key: string]: any;
}
export default class Control extends EventEmitter {
    controlOption: IControlOption;
    protected container: HTMLElement;
    protected mapsService: IMapService;
    protected renderService: IRendererService;
    protected layerService: ILayerService;
    protected controlService: IControlService;
    private isShow;
    constructor(cfg?: Partial<IControlOption>);
    getDefault(): {
        position: PositionType;
    };
    setPosition(position: PositionName): this;
    addTo(sceneContainer: Container): this;
    onAdd(): HTMLElement;
    hide(): void;
    show(): void;
    remove(): this | undefined;
    _refocusOnMap(e: MouseEvent): void;
}
