{"version":3,"sources":["../../src/control/BaseControl.ts"],"names":["TYPES","DOM","EventEmitter","PositionType","Control","cfg","controlOption","container","mapsService","renderService","layerService","controlService","isShow","getDefault","position","TOPRIGHT","sceneContainer","get","IMapService","IRendererService","ILayerService","IControlService","onAdd","pos","corner","controlCorners","addClass","indexOf","insertBefore","firstChild","appendChild","Error","removeClass","remove","e","screenX","screenY","getContainer","focus"],"mappings":"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","sourcesContent":["import {\n  IControlService,\n  ILayerService,\n  IMapService,\n  IRendererService,\n  TYPES,\n} from '@antv/l7-core';\nimport { DOM } from '@antv/l7-utils';\nimport { EventEmitter } from 'eventemitter3';\nimport { Container } from 'inversify';\n\nexport enum PositionType {\n  'TOPRIGHT' = 'topright',\n  'TOPLEFT' = 'topleft',\n  'BOTTOMRIGHT' = 'bottomright',\n  'BOTTOMLEFT' = 'bottomleft',\n}\nexport type PositionName =\n  | 'topright'\n  | 'topleft'\n  | 'bottomright'\n  | 'bottomleft';\nexport interface IControlOption {\n  position: PositionName;\n  [key: string]: any;\n}\nexport default class Control extends EventEmitter {\n  public controlOption: IControlOption;\n  protected container: HTMLElement;\n  protected mapsService: IMapService;\n  protected renderService: IRendererService;\n  protected layerService: ILayerService;\n  protected controlService: IControlService;\n\n  private isShow: boolean;\n\n  constructor(cfg?: Partial<IControlOption>) {\n    super();\n    this.controlOption = {\n      ...this.getDefault(),\n      ...(cfg || {}),\n    };\n  }\n\n  public getDefault() {\n    return {\n      position: PositionType.TOPRIGHT,\n    };\n  }\n  public setPosition(position: PositionName) {\n    // 考虑组件的自动布局，需要销毁重建\n    // const controlService = this.controlService;\n    // if (controlService) {\n    //   controlService.removeControl(this);\n    // }\n    // this.controlOption.position = position;\n    // if (controlService) {\n    //   controlService.addControl(this, this.mapsService);\n    // }\n    return this;\n  }\n  public addTo(sceneContainer: Container) {\n    this.mapsService = sceneContainer.get<IMapService>(TYPES.IMapService);\n    this.renderService = sceneContainer.get<IRendererService>(\n      TYPES.IRendererService,\n    );\n    this.layerService = sceneContainer.get<ILayerService>(TYPES.ILayerService);\n    this.controlService = sceneContainer.get<IControlService>(\n      TYPES.IControlService,\n    );\n\n    this.isShow = true;\n    this.container = this.onAdd();\n    const container = this.container;\n    const pos = this.controlOption.position;\n    const corner = this.controlService.controlCorners[pos];\n    DOM.addClass(container, 'l7-control');\n\n    if (pos.indexOf('bottom') !== -1) {\n      corner.insertBefore(container, corner.firstChild);\n    } else {\n      corner.appendChild(container);\n    }\n    return this;\n  }\n  public onAdd(): HTMLElement {\n    throw new Error('Method not implemented.');\n  }\n  public hide() {\n    const container = this.container;\n    DOM.addClass(container, 'l7-control-hide');\n    this.isShow = false;\n  }\n  public show() {\n    const container = this.container;\n    DOM.removeClass(container, 'l7-control-hide');\n    this.isShow = true;\n  }\n  public remove() {\n    if (!this.mapsService) {\n      return this;\n    }\n    DOM.remove(this.container);\n  }\n  public _refocusOnMap(e: MouseEvent) {\n    // if map exists and event is not a keyboard event\n    if (this.mapsService && e && e.screenX > 0 && e.screenY > 0) {\n      const container = this.mapsService.getContainer();\n      if (container !== null) {\n        container.focus();\n      }\n    }\n  }\n}\n"],"file":"BaseControl.js"}