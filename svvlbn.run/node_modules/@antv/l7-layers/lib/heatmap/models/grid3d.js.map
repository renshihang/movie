{"version":3,"sources":["../../../src/heatmap/models/grid3d.ts"],"names":["Grid3DModel","layer","getLayerConfig","opacity","coverage","u_opacity","u_coverage","u_radius","getSource","data","xOffset","yOffset","buildLayerModel","moduleName","vertexShader","heatmapGrid3dVert","fragmentShader","heatmapGridFrag","triangulation","PointExtrudeTriangulation","depth","enable","styleAttributeService","registerStyleAttribute","name","type","AttributeType","Attribute","descriptor","buffer","usage","gl","DYNAMIC_DRAW","FLOAT","size","update","feature","featureIdx","vertex","attributeIdx","Array","isArray","STATIC_DRAW","normal","coordinates","BaseModel"],"mappings":"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","sourcesContent":["import {\n  AttributeType,\n  gl,\n  IEncodeFeature,\n  IModel,\n  IModelUniform,\n} from '@antv/l7-core';\nimport BaseModel from '../../core/BaseModel';\nimport { PointExtrudeTriangulation } from '../../core/triangulation';\nimport heatmapGrid3dVert from '../shaders/hexagon_3d_vert.glsl';\nimport heatmapGridFrag from '../shaders/hexagon_frag.glsl';\n\ninterface IHeatMapLayerStyleOptions {\n  opacity: number;\n  coverage: number;\n}\nexport default class Grid3DModel extends BaseModel {\n  public getUninforms(): IModelUniform {\n    const {\n      opacity,\n      coverage,\n    } = this.layer.getLayerConfig() as IHeatMapLayerStyleOptions;\n    return {\n      u_opacity: opacity || 1.0,\n      u_coverage: coverage || 1.0,\n      u_radius: [\n        this.layer.getSource().data.xOffset,\n        this.layer.getSource().data.yOffset,\n      ],\n    };\n  }\n\n  public buildModels(): IModel[] {\n    return [\n      this.layer.buildLayerModel({\n        moduleName: 'grid3dheatmap',\n        vertexShader: heatmapGrid3dVert,\n        fragmentShader: heatmapGridFrag,\n        triangulation: PointExtrudeTriangulation,\n        depth: { enable: true },\n      }),\n    ];\n  }\n  protected registerBuiltinAttributes() {\n    // point layer size;\n    this.styleAttributeService.registerStyleAttribute({\n      name: 'size',\n      type: AttributeType.Attribute,\n      descriptor: {\n        name: 'a_Size',\n        buffer: {\n          // give the WebGL driver a hint that this buffer may change\n          usage: gl.DYNAMIC_DRAW,\n          data: [],\n          type: gl.FLOAT,\n        },\n        size: 1,\n        update: (\n          feature: IEncodeFeature,\n          featureIdx: number,\n          vertex: number[],\n          attributeIdx: number,\n        ) => {\n          const { size } = feature;\n          return Array.isArray(size) ? [size[0]] : [size as number];\n        },\n      },\n    });\n\n    // point layer size;\n    this.styleAttributeService.registerStyleAttribute({\n      name: 'normal',\n      type: AttributeType.Attribute,\n      descriptor: {\n        name: 'a_Normal',\n        buffer: {\n          // give the WebGL driver a hint that this buffer may change\n          usage: gl.STATIC_DRAW,\n          data: [],\n          type: gl.FLOAT,\n        },\n        size: 3,\n        update: (\n          feature: IEncodeFeature,\n          featureIdx: number,\n          vertex: number[],\n          attributeIdx: number,\n          normal: number[],\n        ) => {\n          return normal;\n        },\n      },\n    });\n    this.styleAttributeService.registerStyleAttribute({\n      name: 'pos', // 顶点经纬度位置\n      type: AttributeType.Attribute,\n      descriptor: {\n        name: 'a_Pos',\n        buffer: {\n          // give the WebGL driver a hint that this buffer may change\n          usage: gl.DYNAMIC_DRAW,\n          data: [],\n          type: gl.FLOAT,\n        },\n        size: 3,\n        update: (feature: IEncodeFeature, featureIdx: number) => {\n          const coordinates = feature.coordinates as number[];\n          return [coordinates[0], coordinates[1], 0];\n        },\n      },\n    });\n  }\n}\n"],"file":"grid3d.js"}