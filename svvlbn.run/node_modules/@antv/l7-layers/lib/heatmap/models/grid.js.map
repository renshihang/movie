{"version":3,"sources":["../../../src/heatmap/models/grid.ts"],"names":["GridModel","layer","getLayerConfig","opacity","coverage","u_opacity","u_coverage","u_radius","getSource","data","xOffset","yOffset","buildLayerModel","moduleName","vertexShader","heatmapGridVert","fragmentShader","heatmapGridFrag","triangulation","HeatmapGridTriangulation","depth","enable","primitive","gl","TRIANGLES","styleAttributeService","registerStyleAttribute","name","type","AttributeType","Attribute","descriptor","buffer","usage","DYNAMIC_DRAW","FLOAT","size","update","feature","featureIdx","coordinates","BaseModel"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AAOA;;AACA;;;;;IAOqBA,S;;;;;;;;;;mCACkB;AAAA,iBAI/B,KAAKC,KAAL,CAAWC,cAAX,EAJ+B;AAAA,UAEjCC,OAFiC,QAEjCA,OAFiC;AAAA,UAGjCC,QAHiC,QAGjCA,QAHiC;;AAKnC,aAAO;AACLC,QAAAA,SAAS,EAAEF,OAAO,IAAI,GADjB;AAELG,QAAAA,UAAU,EAAEF,QAAQ,IAAI,GAFnB;AAGLG,QAAAA,QAAQ,EAAE,CACR,KAAKN,KAAL,CAAWO,SAAX,GAAuBC,IAAvB,CAA4BC,OADpB,EAER,KAAKT,KAAL,CAAWO,SAAX,GAAuBC,IAAvB,CAA4BE,OAFpB;AAHL,OAAP;AAQD;;;kCAE8B;AAC7B,aAAO,CACL,KAAKV,KAAL,CAAWW,eAAX,CAA2B;AACzBC,QAAAA,UAAU,EAAE,aADa;AAEzBC,QAAAA,YAAY,EAAEC,eAFW;AAGzBC,QAAAA,cAAc,EAAEC,eAHS;AAIzBC,QAAAA,aAAa,EAAEC,uCAJU;AAKzBC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE;AAAV,SALkB;AAMzBC,QAAAA,SAAS,EAAEC,WAAGC;AANW,OAA3B,CADK,CAAP;AAUD;;;gDACqC;AACpC,WAAKC,qBAAL,CAA2BC,sBAA3B,CAAkD;AAChDC,QAAAA,IAAI,EAAE,KAD0C;AAEhDC,QAAAA,IAAI,EAAEC,sBAAcC,SAF4B;AAGhDC,QAAAA,UAAU,EAAE;AACVJ,UAAAA,IAAI,EAAE,OADI;AAEVK,UAAAA,MAAM,EAAE;AAENC,YAAAA,KAAK,EAAEV,WAAGW,YAFJ;AAGNzB,YAAAA,IAAI,EAAE,EAHA;AAINmB,YAAAA,IAAI,EAAEL,WAAGY;AAJH,WAFE;AAQVC,UAAAA,IAAI,EAAE,CARI;AASVC,UAAAA,MAAM,EAAE,gBAACC,OAAD,EAA0BC,UAA1B,EAAiD;AACvD,gBAAMC,WAAW,GAAGF,OAAO,CAACE,WAA5B;AACA,mBAAO,CAACA,WAAW,CAAC,CAAD,CAAZ,EAAiBA,WAAW,CAAC,CAAD,CAA5B,EAAiC,CAAjC,CAAP;AACD;AAZS;AAHoC,OAAlD;AAkBD;;;EA/CoCC,mB","sourcesContent":["import {\n  AttributeType,\n  gl,\n  IEncodeFeature,\n  IModel,\n  IModelUniform,\n} from '@antv/l7-core';\nimport BaseModel from '../../core/BaseModel';\nimport { HeatmapGridTriangulation } from '../../core/triangulation';\nimport heatmapGridVert from '../shaders/grid_vert.glsl';\nimport heatmapGridFrag from '../shaders/hexagon_frag.glsl';\ninterface IHeatMapLayerStyleOptions {\n  opacity: number;\n  coverage: number;\n}\nexport default class GridModel extends BaseModel {\n  public getUninforms(): IModelUniform {\n    const {\n      opacity,\n      coverage,\n    } = this.layer.getLayerConfig() as IHeatMapLayerStyleOptions;\n    return {\n      u_opacity: opacity || 1.0,\n      u_coverage: coverage || 0.9,\n      u_radius: [\n        this.layer.getSource().data.xOffset,\n        this.layer.getSource().data.yOffset,\n      ],\n    };\n  }\n\n  public buildModels(): IModel[] {\n    return [\n      this.layer.buildLayerModel({\n        moduleName: 'gridheatmap',\n        vertexShader: heatmapGridVert,\n        fragmentShader: heatmapGridFrag,\n        triangulation: HeatmapGridTriangulation,\n        depth: { enable: false },\n        primitive: gl.TRIANGLES,\n      }),\n    ];\n  }\n  protected registerBuiltinAttributes() {\n    this.styleAttributeService.registerStyleAttribute({\n      name: 'pos', // 顶点经纬度位置\n      type: AttributeType.Attribute,\n      descriptor: {\n        name: 'a_Pos',\n        buffer: {\n          // give the WebGL driver a hint that this buffer may change\n          usage: gl.DYNAMIC_DRAW,\n          data: [],\n          type: gl.FLOAT,\n        },\n        size: 3,\n        update: (feature: IEncodeFeature, featureIdx: number) => {\n          const coordinates = feature.coordinates as number[];\n          return [coordinates[0], coordinates[1], 0];\n        },\n      },\n    });\n  }\n}\n"],"file":"grid.js"}