{"version":3,"sources":["../src/index.ts"],"names":["container","bind","TYPES","ILayerPlugin","to","ConfigSchemaValidationPlugin","inRequestScope","DataSourcePlugin","RegisterStyleAttributePlugin","FeatureScalePlugin","DataMappingPlugin","LayerStylePlugin","UpdateStyleAttributePlugin","UpdateModelPlugin","MultiPassRendererPlugin","ShaderUniformPlugin","LayerAnimateStylePlugin","LightingPlugin","PixelPickingPlugin","LayerModelPlugin"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAKAA,kBACGC,IADH,CACsBC,cAAMC,YAD5B,EAEGC,EAFH,CAEMC,qCAFN,EAGGC,cAHH;;AAOAN,kBACGC,IADH,CACsBC,cAAMC,YAD5B,EAEGC,EAFH,CAEMG,yBAFN,EAGGD,cAHH;;AAOAN,kBACGC,IADH,CACsBC,cAAMC,YAD5B,EAEGC,EAFH,CAEMI,qCAFN,EAGGF,cAHH;;AAOAN,kBACGC,IADH,CACsBC,cAAMC,YAD5B,EAEGC,EAFH,CAEMK,2BAFN,EAGGH,cAHH;;AAOAN,kBACGC,IADH,CACsBC,cAAMC,YAD5B,EAEGC,EAFH,CAEMM,0BAFN,EAGGJ,cAHH;;AAQAN,kBACGC,IADH,CACsBC,cAAMC,YAD5B,EAEGC,EAFH,CAEMO,yBAFN,EAGGL,cAHH;;AAQAN,kBACGC,IADH,CACsBC,cAAMC,YAD5B,EAEGC,EAFH,CAEMQ,mCAFN,EAGGN,cAHH;;AAQAN,kBACGC,IADH,CACsBC,cAAMC,YAD5B,EAEGC,EAFH,CAEMS,0BAFN,EAGGP,cAHH;;AAQAN,kBACGC,IADH,CACsBC,cAAMC,YAD5B,EAEGC,EAFH,CAEMU,gCAFN,EAGGR,cAHH;;AAOAN,kBACGC,IADH,CACsBC,cAAMC,YAD5B,EAEGC,EAFH,CAEMW,4BAFN,EAGGT,cAHH;;AAQAN,kBACGC,IADH,CACsBC,cAAMC,YAD5B,EAEGC,EAFH,CAEMY,gCAFN,EAGGV,cAHH;;AAOAN,kBACGC,IADH,CACsBC,cAAMC,YAD5B,EAEGC,EAFH,CAEMa,uBAFN,EAGGX,cAHH;;AAOAN,kBACGC,IADH,CACsBC,cAAMC,YAD5B,EAEGC,EAFH,CAEMc,2BAFN,EAGGZ,cAHH;;AAOAN,kBACGC,IADH,CACsBC,cAAMC,YAD5B,EAEGC,EAFH,CAEMe,yBAFN,EAGGb,cAHH","sourcesContent":["import { container, ILayerPlugin, TYPES } from '@antv/l7-core';\nimport CityBuildingLayer from './citybuliding/building';\nimport BaseLayer from './core/BaseLayer';\nimport './glsl.d';\nimport HeatmapLayer from './heatmap';\nimport ImageLayer from './image';\nimport LineLayer from './line/index';\nimport PointLayer from './point';\nimport PolygonLayer from './polygon';\nimport RasterLayer from './raster';\n\nimport ConfigSchemaValidationPlugin from './plugins/ConfigSchemaValidationPlugin';\nimport DataMappingPlugin from './plugins/DataMappingPlugin';\nimport DataSourcePlugin from './plugins/DataSourcePlugin';\nimport FeatureScalePlugin from './plugins/FeatureScalePlugin';\nimport LayerAnimateStylePlugin from './plugins/LayerAnimateStylePlugin';\nimport LayerModelPlugin from './plugins/LayerModelPlugin';\nimport LayerStylePlugin from './plugins/LayerStylePlugin';\nimport LightingPlugin from './plugins/LightingPlugin';\nimport MultiPassRendererPlugin from './plugins/MultiPassRendererPlugin';\nimport PixelPickingPlugin from './plugins/PixelPickingPlugin';\nimport RegisterStyleAttributePlugin from './plugins/RegisterStyleAttributePlugin';\nimport ShaderUniformPlugin from './plugins/ShaderUniformPlugin';\nimport UpdateModelPlugin from './plugins/UpdateModelPlugin';\nimport UpdateStyleAttributePlugin from './plugins/UpdateStyleAttributePlugin';\n/**\n * 校验传入参数配置项的正确性\n * @see /dev-docs/ConfigSchemaValidation.md\n */\ncontainer\n  .bind<ILayerPlugin>(TYPES.ILayerPlugin)\n  .to(ConfigSchemaValidationPlugin)\n  .inRequestScope();\n/**\n * 获取 Source\n */\ncontainer\n  .bind<ILayerPlugin>(TYPES.ILayerPlugin)\n  .to(DataSourcePlugin)\n  .inRequestScope();\n/**\n * 根据 StyleAttribute 创建 VertexAttribute\n */\ncontainer\n  .bind<ILayerPlugin>(TYPES.ILayerPlugin)\n  .to(RegisterStyleAttributePlugin)\n  .inRequestScope();\n/**\n * 根据 Source 创建 Scale\n */\ncontainer\n  .bind<ILayerPlugin>(TYPES.ILayerPlugin)\n  .to(FeatureScalePlugin)\n  .inRequestScope();\n/**\n * 使用 Scale 进行数据映射\n */\ncontainer\n  .bind<ILayerPlugin>(TYPES.ILayerPlugin)\n  .to(DataMappingPlugin)\n  .inRequestScope();\n\n/**\n * 更新地图样式配置项 如active, show, hide\n */\ncontainer\n  .bind<ILayerPlugin>(TYPES.ILayerPlugin)\n  .to(LayerStylePlugin)\n  .inRequestScope();\n\n/**\n * 负责属性更新\n */\ncontainer\n  .bind<ILayerPlugin>(TYPES.ILayerPlugin)\n  .to(UpdateStyleAttributePlugin)\n  .inRequestScope();\n\n/**\n * 负责Model更新\n */\ncontainer\n  .bind<ILayerPlugin>(TYPES.ILayerPlugin)\n  .to(UpdateModelPlugin)\n  .inRequestScope();\n\n/**\n * Multi Pass 自定义渲染管线\n */\ncontainer\n  .bind<ILayerPlugin>(TYPES.ILayerPlugin)\n  .to(MultiPassRendererPlugin)\n  .inRequestScope();\n/**\n * 传入相机坐标系参数\n */\ncontainer\n  .bind<ILayerPlugin>(TYPES.ILayerPlugin)\n  .to(ShaderUniformPlugin)\n  .inRequestScope();\n\n/**\n * 传入动画参数\n */\ncontainer\n  .bind<ILayerPlugin>(TYPES.ILayerPlugin)\n  .to(LayerAnimateStylePlugin)\n  .inRequestScope();\n/**\n * 传入光照相关参数\n */\ncontainer\n  .bind<ILayerPlugin>(TYPES.ILayerPlugin)\n  .to(LightingPlugin)\n  .inRequestScope();\n/**\n * 负责拾取过程中 Encode 以及 Highlight 阶段及结束后恢复\n */\ncontainer\n  .bind<ILayerPlugin>(TYPES.ILayerPlugin)\n  .to(PixelPickingPlugin)\n  .inRequestScope();\n/**\n * 初始化Model\n */\ncontainer\n  .bind<ILayerPlugin>(TYPES.ILayerPlugin)\n  .to(LayerModelPlugin)\n  .inRequestScope();\n\nexport {\n  BaseLayer,\n  PointLayer,\n  PolygonLayer,\n  LineLayer,\n  CityBuildingLayer,\n  ImageLayer,\n  RasterLayer,\n  HeatmapLayer,\n};\n"],"file":"index.js"}