{"version":3,"sources":["../../src/core/BaseLayer.ts"],"names":["layerIdCounter","BaseLayer","TYPES","ILogService","IGlobalConfigService","IShaderModuleService","config","id","name","type","visible","zIndex","minZoom","maxZoom","inited","layerModelNeedUpdate","pickedFeatureID","dataState","dataSourceNeedUpdate","dataMappingNeedUpdate","filterNeedUpdate","featureScaleNeedUpdate","StyleAttrNeedUpdate","hooks","init","SyncBailHook","afterInit","beforeRender","beforeRenderData","SyncWaterfallHook","afterRender","SyncHook","beforePickingEncode","afterPickingEncode","beforeHighlight","afterHighlight","beforeSelect","afterSelect","beforeDestroy","afterDestroy","models","multiPassRenderer","plugins","sourceOption","layerModel","iconService","fontService","rendererService","layerService","interactionService","mapService","styleAttributeService","layerSource","postProcessingPassFactory","normalPassFactory","animateOptions","enable","container","encodedData","configSchema","currentPickId","rawConfig","needUpdateConfig","pendingStyleAttributes","scaleOptions","animateStartTime","aniamateStatus","sourceEvent","reRender","configService","getLayerConfig","configToUpdate","sceneId","get","SceneID","setLayerConfig","plugin","push","IIconService","IFontService","IRendererService","ILayerService","IInteractionService","IMapService","IFactoryPostProcessingPass","IFactoryNormalPass","IStyleAttributeService","IMultiPassRenderer","setLayer","forEach","attributeName","attributeField","attributeValues","defaultName","updateOptions","updateStyleAttribute","scale","field","splitValuesAndCallbackInAttribute","getAll","ILayerPlugin","apply","call","emit","target","updateLayerConfig","getDefaultConfig","animateOption","startAnimate","values","options","rawAnimate","data","setData","on","passes","rest","pass","postProcessingPass","getPostProcessor","getPostProcessingPassByName","cfg","getRenderFlag","render","renderModels","activeOption","enableHighlight","color","highlightColor","x","y","pick","callAsync","setTimeout","option","enableSelect","selectColor","blend","index","updateRenderOrder","zoom","getZoom","Infinity","autoFit","source","getSource","extent","fitBounds","off","clearAllAttributes","model","destroy","removeAllListeners","getLayerStyleAttributes","filter","attribute","needRescale","needRemapping","needRegenerateVertices","length","cluster","updateClusterData","baseLayerSchema","getConfigSchema","triggerHover","moduleName","vertexShader","fragmentShader","triangulation","shaderModuleService","registerModule","vs","fs","getModule","uniforms","createModel","createAttributesAndIndices","attributes","elements","BlendTypes","BlendType","normal","clock","getDelta","getElapsedTime","stopAnimate","Error","buildModels","draw","getUninforms","renderLayers","valuesOrCallback","defaultValues","undefined","callback","EventEmitter"],"mappings":"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","sourcesContent":["import {\n  BlendType,\n  gl,\n  IActiveOption,\n  IAnimateOption,\n  IDataState,\n  IEncodeFeature,\n  IFontService,\n  IGlobalConfigService,\n  IIconService,\n  IInteractionService,\n  ILayer,\n  ILayerConfig,\n  ILayerModel,\n  ILayerModelInitializationOptions,\n  ILayerPlugin,\n  ILayerService,\n  ILogService,\n  IMapService,\n  IModel,\n  IModelInitializationOptions,\n  IMultiPassRenderer,\n  IPass,\n  IPostProcessingPass,\n  IRendererService,\n  IScale,\n  IScaleOptions,\n  IShaderModuleService,\n  ISourceCFG,\n  IStyleAttributeInitializationOptions,\n  IStyleAttributeService,\n  IStyleAttributeUpdateOptions,\n  lazyInject,\n  ScaleTypeName,\n  ScaleTypes,\n  StyleAttributeField,\n  StyleAttributeOption,\n  TYPES,\n} from '@antv/l7-core';\nimport Source from '@antv/l7-source';\nimport { encodePickingColor } from '@antv/l7-utils';\nimport { EventEmitter } from 'eventemitter3';\nimport { Container } from 'inversify';\nimport { isFunction, isObject } from 'lodash';\n// @ts-ignore\nimport mergeJsonSchemas from 'merge-json-schemas';\nimport { SyncBailHook, SyncHook, SyncWaterfallHook } from 'tapable';\nimport { normalizePasses } from '../plugins/MultiPassRendererPlugin';\nimport { BlendTypes } from '../utils/blend';\nimport baseLayerSchema from './schema';\n/**\n * 分配 layer id\n */\nlet layerIdCounter = 0;\n\nexport default class BaseLayer<ChildLayerStyleOptions = {}> extends EventEmitter\n  implements ILayer {\n  public id: string = `${layerIdCounter++}`;\n  public name: string = `${layerIdCounter++}`;\n  public type: string;\n  public visible: boolean = true;\n  public zIndex: number = 0;\n  public minZoom: number;\n  public maxZoom: number;\n  public inited: boolean = false;\n  public layerModelNeedUpdate: boolean = false;\n  public pickedFeatureID: number = -1;\n\n  public dataState: IDataState = {\n    dataSourceNeedUpdate: false,\n    dataMappingNeedUpdate: false,\n    filterNeedUpdate: false,\n    featureScaleNeedUpdate: false,\n    StyleAttrNeedUpdate: false,\n  };\n  // 生命周期钩子\n  public hooks = {\n    init: new SyncBailHook<void, boolean | void>(),\n    afterInit: new SyncBailHook<void, boolean | void>(),\n    beforeRender: new SyncBailHook<void, boolean | void>(),\n    beforeRenderData: new SyncWaterfallHook<void | boolean>(['data']),\n    afterRender: new SyncHook<void>(),\n    beforePickingEncode: new SyncHook<void>(),\n    afterPickingEncode: new SyncHook<void>(),\n    beforeHighlight: new SyncHook<[number[]]>(['pickedColor']),\n    afterHighlight: new SyncHook<void>(),\n    beforeSelect: new SyncHook<[number[]]>(['pickedColor']),\n    afterSelect: new SyncHook<void>(),\n    beforeDestroy: new SyncHook<void>(),\n    afterDestroy: new SyncHook<void>(),\n  };\n\n  // 待渲染 model 列表\n  public models: IModel[] = [];\n\n  // 每个 Layer 都有一个\n  public multiPassRenderer: IMultiPassRenderer;\n\n  // 注入插件集\n  public plugins: ILayerPlugin[];\n\n  public sourceOption: {\n    data: any;\n    options?: ISourceCFG;\n  };\n\n  public layerModel: ILayerModel;\n\n  @lazyInject(TYPES.ILogService)\n  protected readonly logger: ILogService;\n\n  @lazyInject(TYPES.IGlobalConfigService)\n  protected readonly configService: IGlobalConfigService;\n\n  @lazyInject(TYPES.IShaderModuleService)\n  protected readonly shaderModuleService: IShaderModuleService;\n\n  protected iconService: IIconService;\n\n  protected fontService: IFontService;\n\n  protected rendererService: IRendererService;\n\n  protected layerService: ILayerService;\n\n  protected interactionService: IInteractionService;\n\n  protected mapService: IMapService;\n\n  protected styleAttributeService: IStyleAttributeService;\n\n  protected layerSource: Source;\n\n  protected postProcessingPassFactory: (\n    name: string,\n  ) => IPostProcessingPass<unknown>;\n  protected normalPassFactory: (name: string) => IPass<unknown>;\n\n  protected animateOptions: IAnimateOption = { enable: false };\n\n  /**\n   * 图层容器\n   */\n  private container: Container;\n\n  private encodedData: IEncodeFeature[];\n\n  private configSchema: object;\n\n  private currentPickId: number | null = null;\n\n  private rawConfig: Partial<ILayerConfig & ChildLayerStyleOptions>;\n\n  private needUpdateConfig: Partial<ILayerConfig & ChildLayerStyleOptions>;\n\n  /**\n   * 待更新样式属性，在初始化阶段完成注册\n   */\n  private pendingStyleAttributes: Array<{\n    attributeName: string;\n    attributeField: StyleAttributeField;\n    attributeValues?: StyleAttributeOption;\n    defaultName?: string;\n    updateOptions?: Partial<IStyleAttributeUpdateOptions>;\n  }> = [];\n\n  private scaleOptions: IScaleOptions = {};\n\n  private animateStartTime: number;\n\n  private aniamateStatus: boolean = false;\n\n  constructor(config: Partial<ILayerConfig & ChildLayerStyleOptions> = {}) {\n    super();\n    this.name = config.name || this.id;\n    this.rawConfig = config;\n  }\n\n  public getLayerConfig() {\n    return this.configService.getLayerConfig<ChildLayerStyleOptions>(this.id);\n  }\n\n  public updateLayerConfig(\n    configToUpdate: Partial<ILayerConfig | ChildLayerStyleOptions>,\n  ) {\n    if (!this.inited) {\n      this.needUpdateConfig = {\n        ...this.needUpdateConfig,\n        ...configToUpdate,\n      };\n    } else {\n      const sceneId = this.container.get<string>(TYPES.SceneID);\n      this.configService.setLayerConfig(sceneId, this.id, {\n        ...this.configService.getLayerConfig(this.id),\n        ...this.needUpdateConfig,\n        ...configToUpdate,\n      });\n      this.needUpdateConfig = {};\n    }\n  }\n\n  /**\n   * 注入图层容器，父容器为场景容器\n   * RootContainer 1\n   *  -> SceneContainer 1.*\n   *   -> LayerContainer 1.*\n   */\n  public setContainer(container: Container) {\n    this.container = container;\n  }\n\n  public getContainer() {\n    return this.container;\n  }\n\n  public addPlugin(plugin: ILayerPlugin) {\n    // TODO: 控制插件注册顺序\n    // @example:\n    // pointLayer.addPlugin(new MyCustomPlugin(), {\n    //   before: 'L7BuiltinPlugin'\n    // });\n    this.plugins.push(plugin);\n    return this;\n  }\n\n  public init() {\n    // 设置配置项\n    const sceneId = this.container.get<string>(TYPES.SceneID);\n    // 初始化图层配置项\n    this.configService.setLayerConfig(sceneId, this.id, {});\n\n    // 全局容器服务\n\n    // 场景容器服务\n    this.iconService = this.container.get<IIconService>(TYPES.IIconService);\n    this.fontService = this.container.get<IFontService>(TYPES.IFontService);\n\n    this.rendererService = this.container.get<IRendererService>(\n      TYPES.IRendererService,\n    );\n    this.layerService = this.container.get<ILayerService>(TYPES.ILayerService);\n    this.interactionService = this.container.get<IInteractionService>(\n      TYPES.IInteractionService,\n    );\n    this.mapService = this.container.get<IMapService>(TYPES.IMapService);\n    this.postProcessingPassFactory = this.container.get(\n      TYPES.IFactoryPostProcessingPass,\n    );\n    this.normalPassFactory = this.container.get(TYPES.IFactoryNormalPass);\n\n    // 图层容器服务\n    this.styleAttributeService = this.container.get<IStyleAttributeService>(\n      TYPES.IStyleAttributeService,\n    );\n    this.multiPassRenderer = this.container.get<IMultiPassRenderer>(\n      TYPES.IMultiPassRenderer,\n    );\n    this.multiPassRenderer.setLayer(this);\n\n    // 完成样式服务注册完成前添加的属性\n    this.pendingStyleAttributes.forEach(\n      ({\n        attributeName,\n        attributeField,\n        attributeValues,\n        defaultName,\n        updateOptions,\n      }) => {\n        this.styleAttributeService.updateStyleAttribute(\n          attributeName,\n          {\n            // @ts-ignore\n            scale: {\n              field: attributeField,\n              ...this.splitValuesAndCallbackInAttribute(\n                // @ts-ignore\n                attributeValues,\n                // @ts-ignore\n                this.getLayerConfig()[defaultName || attributeName],\n              ),\n            },\n          },\n          // @ts-ignore\n          updateOptions,\n        );\n      },\n    );\n    this.pendingStyleAttributes = [];\n\n    // 获取插件集\n    this.plugins = this.container.getAll<ILayerPlugin>(TYPES.ILayerPlugin);\n    // 完成插件注册，传入场景和图层容器内的服务\n    for (const plugin of this.plugins) {\n      plugin.apply(this, {\n        rendererService: this.rendererService,\n        mapService: this.mapService,\n        styleAttributeService: this.styleAttributeService,\n        normalPassFactory: this.normalPassFactory,\n        postProcessingPassFactory: this.postProcessingPassFactory,\n      });\n    }\n\n    // 触发 init 生命周期插件\n    this.hooks.init.call();\n    this.hooks.afterInit.call();\n\n    // 触发初始化完成事件;\n    this.emit('inited', {\n      target: this,\n      type: 'inited',\n    });\n    this.emit('add', {\n      target: this,\n      type: 'add',\n    });\n    return this;\n  }\n  /**\n   * Model初始化前需要更新Model样式\n   */\n  public prepareBuildModel() {\n    this.inited = true;\n    this.updateLayerConfig({\n      ...(this.getDefaultConfig() as object),\n      ...this.rawConfig,\n    });\n\n    // 启动动画\n    const { animateOption } = this.getLayerConfig();\n    if (animateOption?.enable) {\n      this.layerService.startAnimate();\n      this.aniamateStatus = true;\n    }\n  }\n  public color(\n    field: StyleAttributeField,\n    values?: StyleAttributeOption,\n    updateOptions?: Partial<IStyleAttributeUpdateOptions>,\n  ) {\n    // 设置 color、size、shape、style 时由于场景服务尚未完成（并没有调用 scene.addLayer），因此暂时加入待更新属性列表\n    this.pendingStyleAttributes.push({\n      attributeName: 'color',\n      attributeField: field,\n      attributeValues: values,\n      defaultName: 'colors',\n      updateOptions,\n    });\n    return this;\n  }\n\n  public size(\n    field: StyleAttributeField,\n    values?: StyleAttributeOption,\n    updateOptions?: Partial<IStyleAttributeUpdateOptions>,\n  ) {\n    this.pendingStyleAttributes.push({\n      attributeName: 'size',\n      attributeField: field,\n      attributeValues: values,\n      updateOptions,\n    });\n    return this;\n  }\n  // 对mapping后的数据过滤，scale保持不变\n  public filter(\n    field: StyleAttributeField,\n    values?: StyleAttributeOption,\n    updateOptions?: Partial<IStyleAttributeUpdateOptions>,\n  ) {\n    this.pendingStyleAttributes.push({\n      attributeName: 'filter',\n      attributeField: field,\n      attributeValues: values,\n      updateOptions,\n    });\n    this.dataState.dataMappingNeedUpdate = true;\n    return this;\n  }\n\n  public shape(\n    field: StyleAttributeField,\n    values?: StyleAttributeOption,\n    updateOptions?: Partial<IStyleAttributeUpdateOptions>,\n  ) {\n    this.pendingStyleAttributes.push({\n      attributeName: 'shape',\n      attributeField: field,\n      attributeValues: values,\n      updateOptions,\n    });\n    return this;\n  }\n  public label(\n    field: StyleAttributeField,\n    values?: StyleAttributeOption,\n    updateOptions?: Partial<IStyleAttributeUpdateOptions>,\n  ) {\n    this.pendingStyleAttributes.push({\n      attributeName: 'label',\n      attributeField: field,\n      attributeValues: values,\n      updateOptions,\n    });\n    return this;\n  }\n  public animate(options: IAnimateOption | boolean) {\n    let rawAnimate: Partial<IAnimateOption> = {};\n    if (isObject(options)) {\n      rawAnimate.enable = true;\n      rawAnimate = {\n        ...rawAnimate,\n        ...options,\n      };\n    } else {\n      rawAnimate.enable = options;\n    }\n    this.updateLayerConfig({\n      animateOption: rawAnimate,\n    });\n    // this.animateOptions = options;\n    return this;\n  }\n\n  public source(data: any, options?: ISourceCFG): ILayer {\n    this.sourceOption = {\n      data,\n      options,\n    };\n    return this;\n  }\n\n  public setData(data: any, options?: ISourceCFG) {\n    if (this.inited) {\n      this.layerSource.setData(data);\n    } else {\n      this.on('inited', () => {\n        this.layerSource.setData(data);\n      });\n    }\n\n    return this;\n  }\n  public style(\n    options: Partial<ChildLayerStyleOptions> & Partial<ILayerConfig>,\n  ): ILayer {\n    const { passes, ...rest } = options;\n\n    // passes 特殊处理\n    if (passes) {\n      normalizePasses(passes).forEach(\n        (pass: [string, { [key: string]: unknown }]) => {\n          const postProcessingPass = this.multiPassRenderer\n            .getPostProcessor()\n            .getPostProcessingPassByName(pass[0]);\n          if (postProcessingPass) {\n            postProcessingPass.updateOptions(pass[1]);\n          }\n        },\n      );\n    }\n\n    this.rawConfig = {\n      ...this.rawConfig,\n      ...rest,\n    };\n\n    if (this.container) {\n      this.updateLayerConfig(this.rawConfig);\n    }\n    return this;\n  }\n  public scale(field: ScaleTypeName | IScaleOptions, cfg: IScale) {\n    if (isObject(field)) {\n      this.scaleOptions = {\n        ...this.scaleOptions,\n        ...field,\n      };\n    } else {\n      this.scaleOptions[field] = cfg;\n    }\n    return this;\n  }\n  public render(): ILayer {\n    if (this.multiPassRenderer && this.multiPassRenderer.getRenderFlag()) {\n      this.multiPassRenderer.render();\n    } else {\n      this.renderModels();\n    }\n    return this;\n  }\n\n  public active(options: IActiveOption) {\n    const activeOption: Partial<ILayerConfig> = {};\n    activeOption.enableHighlight = isObject(options) ? true : options;\n    if (isObject(options)) {\n      activeOption.enableHighlight = true;\n      if (options.color) {\n        activeOption.highlightColor = options.color;\n      }\n    } else {\n      activeOption.enableHighlight = !!options;\n    }\n    this.updateLayerConfig(activeOption);\n    return this;\n  }\n  public setActive(\n    id: number | { x: number; y: number },\n    options?: IActiveOption,\n  ): void {\n    if (isObject(id)) {\n      const { x = 0, y = 0 } = id;\n      this.updateLayerConfig({\n        highlightColor: isObject(options)\n          ? options.color\n          : this.getLayerConfig().highlightColor,\n      });\n      this.pick({ x, y });\n    } else {\n      this.updateLayerConfig({\n        pickedFeatureID: id,\n        highlightColor: isObject(options)\n          ? options.color\n          : this.getLayerConfig().highlightColor,\n      });\n      this.hooks.beforeSelect.callAsync(\n        encodePickingColor(id as number) as number[],\n        () => {\n          setTimeout(() => {\n            this.reRender();\n          }, 1);\n        },\n      );\n    }\n  }\n\n  public select(option: IActiveOption | boolean): ILayer {\n    const activeOption: Partial<ILayerConfig> = {};\n    activeOption.enableSelect = isObject(option) ? true : option;\n    if (isObject(option)) {\n      activeOption.enableSelect = true;\n      if (option.color) {\n        activeOption.selectColor = option.color;\n      }\n    } else {\n      activeOption.enableSelect = !!option;\n    }\n    this.updateLayerConfig(activeOption);\n    return this;\n  }\n\n  public setSelect(\n    id: number | { x: number; y: number },\n    options?: IActiveOption,\n  ): void {\n    if (isObject(id)) {\n      const { x = 0, y = 0 } = id;\n      this.updateLayerConfig({\n        selectColor: isObject(options)\n          ? options.color\n          : this.getLayerConfig().selectColor,\n      });\n      this.pick({ x, y });\n    } else {\n      this.updateLayerConfig({\n        pickedFeatureID: id,\n        selectColor: isObject(options)\n          ? options.color\n          : this.getLayerConfig().selectColor,\n      });\n      this.hooks.beforeSelect.callAsync(\n        encodePickingColor(id as number) as number[],\n        () => {\n          setTimeout(() => {\n            this.reRender();\n          }, 1);\n        },\n      );\n    }\n  }\n  public setBlend(type: keyof typeof BlendType): void {\n    this.updateLayerConfig({\n      blend: type,\n    });\n    this.layerModelNeedUpdate = true;\n    this.reRender();\n  }\n  public show(): ILayer {\n    this.updateLayerConfig({\n      visible: true,\n    });\n    this.reRender();\n    return this;\n  }\n\n  public hide(): ILayer {\n    this.updateLayerConfig({\n      visible: false,\n    });\n    this.reRender();\n    return this;\n  }\n  public setIndex(index: number): ILayer {\n    this.zIndex = index;\n    this.layerService.updateRenderOrder();\n    return this;\n  }\n\n  public setCurrentPickId(id: number) {\n    this.currentPickId = id;\n  }\n\n  public getCurrentPickId(): number | null {\n    return this.currentPickId;\n  }\n  public isVisible(): boolean {\n    const zoom = this.mapService.getZoom();\n    const {\n      visible,\n      minZoom = -Infinity,\n      maxZoom = Infinity,\n    } = this.getLayerConfig();\n    return !!visible && zoom >= minZoom && zoom <= maxZoom;\n  }\n\n  public setMinZoom(minZoom: number): ILayer {\n    this.updateLayerConfig({\n      minZoom,\n    });\n    return this;\n  }\n\n  public setMaxZoom(maxZoom: number): ILayer {\n    this.updateLayerConfig({\n      maxZoom,\n    });\n    return this;\n  }\n  /**\n   * zoom to layer Bounds\n   */\n  public fitBounds(): ILayer {\n    if (!this.inited) {\n      this.updateLayerConfig({\n        autoFit: true,\n      });\n      return this;\n    }\n    const source = this.getSource();\n    const extent = source.extent;\n    this.mapService.fitBounds([\n      [extent[0], extent[1]],\n      [extent[2], extent[3]],\n    ]);\n    return this;\n  }\n\n  public destroy() {\n    this.hooks.beforeDestroy.call();\n    // 清除sources事件\n    this.layerSource.off('update', this.sourceEvent);\n\n    // 清除所有属性以及关联的 vao\n    this.styleAttributeService.clearAllAttributes();\n    // 销毁所有 model\n    this.models.forEach((model) => model.destroy());\n\n    this.hooks.afterDestroy.call();\n\n    this.emit('remove', {\n      target: this,\n      type: 'remove',\n    });\n\n    this.removeAllListeners();\n\n    // 解绑图层容器中的服务\n    // this.container.unbind(TYPES.IStyleAttributeService);\n  }\n  public clear() {\n    this.styleAttributeService.clearAllAttributes();\n    // 销毁所有 model\n    this.models.forEach((model) => model.destroy());\n  }\n\n  public isDirty() {\n    return !!(\n      this.styleAttributeService.getLayerStyleAttributes() || []\n    ).filter(\n      (attribute) =>\n        attribute.needRescale ||\n        attribute.needRemapping ||\n        attribute.needRegenerateVertices,\n    ).length;\n  }\n\n  public setSource(source: Source) {\n    this.layerSource = source;\n    const zoom = this.mapService.getZoom();\n    if (this.layerSource.cluster) {\n      this.layerSource.updateClusterData(zoom);\n    }\n    // source 可能会复用，会在其它layer被修改\n    this.layerSource.on('update', this.sourceEvent);\n  }\n  public getSource() {\n    return this.layerSource;\n  }\n\n  public getScaleOptions() {\n    return this.scaleOptions;\n  }\n\n  public setEncodedData(encodedData: IEncodeFeature[]) {\n    this.encodedData = encodedData;\n  }\n  public getEncodedData() {\n    return this.encodedData;\n  }\n\n  public getConfigSchemaForValidation() {\n    if (!this.configSchema) {\n      // 相比 allOf, merge 有一些优势\n      // @see https://github.com/goodeggs/merge-json-schemas\n      this.configSchema = mergeJsonSchemas([\n        baseLayerSchema,\n        this.getConfigSchema(),\n      ]);\n    }\n    return this.configSchema;\n  }\n\n  public pick({ x, y }: { x: number; y: number }) {\n    this.interactionService.triggerHover({ x, y });\n  }\n\n  public buildLayerModel(\n    options: ILayerModelInitializationOptions &\n      Partial<IModelInitializationOptions>,\n  ): IModel {\n    const {\n      moduleName,\n      vertexShader,\n      fragmentShader,\n      triangulation,\n      ...rest\n    } = options;\n    this.shaderModuleService.registerModule(moduleName, {\n      vs: vertexShader,\n      fs: fragmentShader,\n    });\n    const { vs, fs, uniforms } = this.shaderModuleService.getModule(moduleName);\n    const { createModel } = this.rendererService;\n    const {\n      attributes,\n      elements,\n    } = this.styleAttributeService.createAttributesAndIndices(\n      this.encodedData,\n      triangulation,\n    );\n    return createModel({\n      attributes,\n      uniforms,\n      fs,\n      vs,\n      elements,\n      blend: BlendTypes[BlendType.normal],\n      ...rest,\n    });\n  }\n\n  public getTime() {\n    return this.layerService.clock.getDelta();\n  }\n  public setAnimateStartTime() {\n    this.animateStartTime = this.layerService.clock.getElapsedTime();\n  }\n  public stopAnimate() {\n    if (this.aniamateStatus) {\n      this.layerService.stopAnimate();\n      this.aniamateStatus = false;\n      this.updateLayerConfig({\n        animateOption: {\n          enable: false,\n        },\n      });\n    }\n  }\n  public getLayerAnimateTime(): number {\n    return this.layerService.clock.getElapsedTime() - this.animateStartTime;\n  }\n\n  public buildModels() {\n    throw new Error('Method not implemented.');\n  }\n\n  protected getConfigSchema() {\n    throw new Error('Method not implemented.');\n  }\n\n  protected renderModels() {\n    if (this.layerModelNeedUpdate) {\n      this.models = this.layerModel.buildModels();\n      this.layerModelNeedUpdate = false;\n    }\n    this.models.forEach((model) => {\n      model.draw({\n        uniforms: this.layerModel.getUninforms(),\n      });\n    });\n    return this;\n  }\n\n  protected getModelType(): unknown {\n    throw new Error('Method not implemented.');\n  }\n  protected getDefaultConfig() {\n    return {};\n  }\n\n  private sourceEvent = () => {\n    this.dataState.dataSourceNeedUpdate = true;\n    this.reRender();\n  };\n\n  private reRender() {\n    if (this.inited) {\n      this.layerService.renderLayers();\n    }\n  }\n  private splitValuesAndCallbackInAttribute(\n    valuesOrCallback?: unknown[],\n    defaultValues?: unknown[],\n  ) {\n    return {\n      values: isFunction(valuesOrCallback)\n        ? undefined\n        : valuesOrCallback || defaultValues,\n      callback: isFunction(valuesOrCallback) ? valuesOrCallback : undefined,\n    };\n  }\n}\n"],"file":"BaseLayer.js"}