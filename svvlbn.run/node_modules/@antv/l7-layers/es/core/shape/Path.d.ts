export declare type IPosition = [number, number, number] | [number, number];
export declare type IPath = IPosition[];
export declare enum ShapeType3D {
    CYLINDER = "cylinder",
    SQUARECOLUMN = "squareColumn",
    TRIANGLECOLUMN = "triangleColumn",
    HEXAGONCOLUMN = "hexagonColumn",
    PENTAGONCOLUMN = "pentagonColumn"
}
export declare enum ShapeType2D {
    CIRCLE = "circle",
    SQUARE = "square",
    TRIANGLE = "triangle",
    HEXAGON = "hexagon",
    PENTAGON = "pentagon"
}
/**
 * 生成规则多边形顶点个数
 * @param pointCount  顶点个数 3 => 三角形
 * @param start 顶点起始角度 调整图形的方向
 */
export declare function polygonPath(pointCount: number, start?: number): IPath;
export declare function circle(): IPath;
export declare function square(): IPath;
export declare function triangle(): IPath;
export declare function hexagon(): IPath;
export declare function pentagon(): IPath;
export declare const geometryShape: {
    [ShapeType2D.CIRCLE]: typeof circle;
    [ShapeType2D.HEXAGON]: typeof hexagon;
    [ShapeType2D.TRIANGLE]: typeof triangle;
    [ShapeType2D.SQUARE]: typeof square;
    [ShapeType2D.PENTAGON]: typeof pentagon;
    [ShapeType3D.CYLINDER]: typeof circle;
    [ShapeType3D.HEXAGONCOLUMN]: typeof hexagon;
    [ShapeType3D.TRIANGLECOLUMN]: typeof triangle;
    [ShapeType3D.SQUARECOLUMN]: typeof square;
    [ShapeType3D.PENTAGONCOLUMN]: typeof pentagon;
};
