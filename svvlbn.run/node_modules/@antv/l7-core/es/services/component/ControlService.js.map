{"version":3,"sources":["../../../src/services/component/ControlService.ts"],"names":["DOM","injectable","TYPES","ControlService","container","controlCorners","controlContainer","scene","mapsService","controls","unAddControls","cfg","sceneContainer","get","IMapService","initControlPos","ctr","map","addTo","push","index","indexOf","splice","remove","forEach","clearControlPos","corners","l","create","createCorner","vSide","hSide","className","i"],"mappings":"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","sourcesContent":["import { DOM } from '@antv/l7-utils';\nimport { Container, injectable } from 'inversify';\nimport { TYPES } from '../../types';\nimport { IMapService } from '../map/IMapService';\nimport {\n  IControl,\n  IControlCorners,\n  IControlService,\n  IControlServiceCfg,\n} from './IControlService';\n@injectable()\nexport default class ControlService implements IControlService {\n  public container: HTMLElement;\n  public controlCorners: IControlCorners;\n  public controlContainer: HTMLElement;\n  public scene: Container;\n  public mapsService: IMapService;\n  private controls: IControl[] = [];\n  private unAddControls: IControl[] = [];\n  public init(cfg: IControlServiceCfg, sceneContainer: Container) {\n    this.container = cfg.container;\n    this.scene = sceneContainer;\n    this.mapsService = sceneContainer.get<IMapService>(TYPES.IMapService);\n    this.initControlPos();\n  }\n  public addControl(ctr: IControl, sceneContainer: Container): void {\n    const mapsService = sceneContainer.get<IMapService>(TYPES.IMapService);\n    if (mapsService.map) {\n      ctr.addTo(this.scene); // scene对象\n      this.controls.push(ctr);\n    } else {\n      this.unAddControls.push(ctr);\n    }\n  }\n  public removeControl(ctr: IControl): this {\n    const index = this.controls.indexOf(ctr);\n    if (index > -1) {\n      this.controls.splice(index, 1);\n    }\n    ctr.remove();\n    return this;\n  }\n\n  public addControls() {\n    this.unAddControls.forEach((ctr: IControl) => {\n      ctr.addTo(this.scene); // scene对象\n      this.controls.push(ctr);\n    });\n    this.unAddControls = [];\n  }\n\n  public destroy(): void {\n    for (const ctr of this.controls) {\n      ctr.remove();\n    }\n    this.controls = [];\n    this.clearControlPos();\n  }\n\n  private initControlPos() {\n    const corners: IControlCorners = (this.controlCorners = {});\n    const l = 'l7-';\n    const container = (this.controlContainer = DOM.create(\n      'div',\n      l + 'control-container',\n      this.container,\n    ));\n\n    function createCorner(vSide: string, hSide: string) {\n      const className = l + vSide + ' ' + l + hSide;\n\n      corners[vSide + hSide] = DOM.create('div', className, container);\n    }\n\n    createCorner('top', 'left');\n    createCorner('top', 'right');\n    createCorner('bottom', 'left');\n    createCorner('bottom', 'right');\n  }\n\n  private clearControlPos() {\n    for (const i in this.controlCorners) {\n      if (this.controlCorners[i]) {\n        DOM.remove(this.controlCorners[i]);\n      }\n    }\n    if (this.controlContainer) {\n      DOM.remove(this.controlContainer);\n    }\n    delete this.controlCorners;\n    delete this.controlContainer;\n  }\n}\n"],"file":"ControlService.js"}