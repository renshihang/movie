{"version":3,"sources":["../../../src/services/layer/LayerService.ts"],"names":["LayerService","TYPES","IRendererService","IGlobalConfigService","clock","Clock","layers","layerRenderID","sceneInited","animateInstanceCount","alreadyInRendering","layer","push","forEach","inited","init","name","find","layerIndex","indexOf","splice","emit","destroy","renderLayers","clear","filter","isVisible","hooks","beforeRenderData","call","beforeRender","render","afterRender","sort","pre","next","zIndex","start","runRender","stopRender","stop","renderService","color","depth","stencil","framebuffer","requestAnimationFrame","bind","cancelAnimationFrame"],"mappings":"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","sourcesContent":["import { inject, injectable } from 'inversify';\nimport { ILayer } from '../..';\nimport { TYPES } from '../../types';\nimport Clock from '../../utils/clock';\nimport { IGlobalConfigService } from '../config/IConfigService';\nimport { IRendererService } from '../renderer/IRendererService';\nimport { ILayerModel, ILayerService } from './ILayerService';\n\n@injectable()\nexport default class LayerService implements ILayerService {\n  public clock = new Clock();\n\n  private layers: ILayer[] = [];\n\n  private layerRenderID: number;\n\n  private sceneInited: boolean = false;\n\n  private animateInstanceCount: number = 0;\n\n  private alreadyInRendering: boolean = false;\n\n  @inject(TYPES.IRendererService)\n  private readonly renderService: IRendererService;\n\n  @inject(TYPES.IGlobalConfigService)\n  private readonly configService: IGlobalConfigService;\n\n  public add(layer: ILayer) {\n    // if (this.sceneInited) {\n    //   layer.init();\n    // }\n    this.layers.push(layer);\n  }\n\n  public initLayers() {\n    this.sceneInited = true;\n    this.layers.forEach((layer) => {\n      if (!layer.inited) {\n        layer.init();\n      }\n    });\n  }\n\n  public getLayers(): ILayer[] {\n    return this.layers;\n  }\n\n  public getLayer(name: string): ILayer | undefined {\n    return this.layers.find((layer) => layer.name === name);\n  }\n\n  public remove(layer: ILayer): void {\n    const layerIndex = this.layers.indexOf(layer);\n    if (layerIndex > -1) {\n      this.layers.splice(layerIndex, 1);\n    }\n    layer.emit('remove', null);\n    layer.destroy();\n    this.renderLayers();\n  }\n\n  public removeAllLayers() {\n    this.destroy();\n  }\n\n  public renderLayers() {\n    // TODO：脏检查，只渲染发生改变的 Layer\n    if (this.alreadyInRendering) {\n      return;\n    }\n    //\n    this.alreadyInRendering = true;\n    this.clear();\n    this.layers\n      .filter((layer) => layer.isVisible())\n      .forEach((layer) => {\n        // trigger hooks\n        layer.hooks.beforeRenderData.call(true);\n        layer.hooks.beforeRender.call();\n        layer.render();\n        layer.hooks.afterRender.call();\n      });\n    this.alreadyInRendering = false;\n  }\n\n  public updateRenderOrder() {\n    this.layers.sort((pre: ILayer, next: ILayer) => {\n      return pre.zIndex - next.zIndex;\n    });\n    this.renderLayers();\n  }\n\n  public destroy() {\n    this.layers.forEach((layer) => layer.destroy());\n    this.layers = [];\n    this.renderLayers();\n  }\n\n  public startAnimate() {\n    if (this.animateInstanceCount++ === 0) {\n      this.clock.start();\n      this.runRender();\n    }\n  }\n\n  public stopAnimate() {\n    if (--this.animateInstanceCount === 0) {\n      this.stopRender();\n      this.clock.stop();\n    }\n  }\n\n  private clear() {\n    this.renderService.clear({\n      color: [0, 0, 0, 0],\n      depth: 1,\n      stencil: 0,\n      framebuffer: null,\n    });\n  }\n\n  private runRender() {\n    this.renderLayers();\n    this.layerRenderID = requestAnimationFrame(this.runRender.bind(this));\n  }\n\n  private stopRender() {\n    cancelAnimationFrame(this.layerRenderID);\n  }\n}\n"],"file":"LayerService.js"}