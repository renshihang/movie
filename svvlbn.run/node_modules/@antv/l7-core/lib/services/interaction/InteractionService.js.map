{"version":3,"sources":["../../../src/services/interaction/InteractionService.ts"],"names":["InteractionService","TYPES","IMapService","ILogService","hammertime","onHover","x","y","type","$containter","mapService","getMapContainer","getBoundingClientRect","top","left","lngLat","containerToLngLat","emit","InteractionEvent","Hover","addEventListenerOnMap","destroy","removeEventListenerOnMap","off","id","Select","featureId","Active","Hammer","get","set","direction","DIRECTION_ALL","enable","addEventListener","logger","debug","removeEventListener","EventEmitter"],"mappings":"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","sourcesContent":["import EventEmitter from 'eventemitter3';\nimport Hammer from 'hammerjs';\nimport { inject, injectable } from 'inversify';\nimport { TYPES } from '../../types';\nimport { ILogService } from '../log/ILogService';\nimport { IMapService } from '../map/IMapService';\nimport { IInteractionService, InteractionEvent } from './IInteractionService';\n/**\n * 由于目前 L7 与地图结合的方案为双 canvas 而非共享 WebGL Context，事件监听注册在地图底图上。\n * 除此之外，后续如果支持非地图场景，事件监听就需要注册在 L7 canvas 上。\n */\n@injectable()\nexport default class InteractionService extends EventEmitter\n  implements IInteractionService {\n  @inject(TYPES.IMapService)\n  private readonly mapService: IMapService;\n\n  @inject(TYPES.ILogService)\n  private readonly logger: ILogService;\n\n  private hammertime: HammerManager;\n\n  public init() {\n    // 注册事件在地图底图上\n    this.addEventListenerOnMap();\n  }\n\n  public destroy() {\n    if (this.hammertime) {\n      this.hammertime.destroy();\n    }\n    this.removeEventListenerOnMap();\n    this.off(InteractionEvent.Hover);\n  }\n\n  public triggerHover({ x, y }: { x: number; y: number }) {\n    this.emit(InteractionEvent.Hover, { x, y });\n  }\n  public triggerSelect(id: number): void {\n    this.emit(InteractionEvent.Select, { featureId: id });\n  }\n\n  public triggerActive(id: number): void {\n    this.emit(InteractionEvent.Active, { featureId: id });\n  }\n\n  private addEventListenerOnMap() {\n    const $containter = this.mapService.getMapContainer();\n    if ($containter) {\n      const hammertime = new Hammer($containter);\n      hammertime.get('pan').set({ direction: Hammer.DIRECTION_ALL });\n      hammertime.get('pinch').set({ enable: true });\n\n      // hammertime.on('panstart', this.onPanstart);\n      // hammertime.on('panmove', this.onPanmove);\n      // hammertime.on('panend', this.onPanend);\n      // hammertime.on('pinch', this.onPinch);\n      $containter.addEventListener('mousemove', this.onHover);\n      $containter.addEventListener('click', this.onHover);\n      $containter.addEventListener('mousedown', this.onHover);\n      $containter.addEventListener('mouseup', this.onHover);\n      $containter.addEventListener('dblclick', this.onHover);\n      $containter.addEventListener('contextmenu', this.onHover);\n\n      this.hammertime = hammertime;\n\n      // TODO: 根据场景注册事件到 L7 canvas 上\n      this.logger.debug('add event listeners on canvas');\n    }\n  }\n  private removeEventListenerOnMap() {\n    const $containter = this.mapService.getMapContainer();\n    if ($containter) {\n      $containter.removeEventListener('mousemove', this.onHover);\n      $containter.removeEventListener('click', this.onHover);\n      $containter.removeEventListener('mousedown', this.onHover);\n      $containter.removeEventListener('mouseup', this.onHover);\n      $containter.removeEventListener('dblclick', this.onHover);\n      $containter.removeEventListener('contextmenu', this.onHover);\n    }\n  }\n\n  private onHover = ({ x, y, type }: MouseEvent) => {\n    const $containter = this.mapService.getMapContainer();\n    if ($containter) {\n      const { top, left } = $containter.getBoundingClientRect();\n      x -= left;\n      y -= top;\n    }\n    const lngLat = this.mapService.containerToLngLat([x, y]);\n    this.emit(InteractionEvent.Hover, { x, y, lngLat, type });\n  };\n}\n"],"file":"InteractionService.js"}